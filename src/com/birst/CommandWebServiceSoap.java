
package com.birst;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CommandWebServiceSoap", targetNamespace = "http://www.birst.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CommandWebServiceSoap {


    /**
     * Sets the password for a user.  Argments are the Login token, the user name, and the password
     * 
     * @param password
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setUserPassword")
    @RequestWrapper(localName = "setUserPassword", targetNamespace = "http://www.birst.com/", className = "com.birst.SetUserPassword")
    @ResponseWrapper(localName = "setUserPasswordResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetUserPasswordResponse")
    void setUserPassword(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "password", targetNamespace = "http://www.birst.com/")
                    String password);

    /**
     * Clears the dashboard cache.  Arguments are the Login token and the space id
     * 
     * @param spaceID
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/clearDashboardCache")
    @RequestWrapper(localName = "clearDashboardCache", targetNamespace = "http://www.birst.com/", className = "com.birst.ClearDashboardCache")
    @ResponseWrapper(localName = "clearDashboardCacheResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ClearDashboardCacheResponse")
    void clearDashboardCache(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Renames a dashboard.  Arguments are the Login token, the space id, the old dashboard name and the new dashboard name
     * 
     * @param dashName
     * @param spaceID
     * @param newDashName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/renameDashboard")
    @RequestWrapper(localName = "renameDashboard", targetNamespace = "http://www.birst.com/", className = "com.birst.RenameDashboard")
    @ResponseWrapper(localName = "renameDashboardResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RenameDashboardResponse")
    void renameDashboard(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "dashName", targetNamespace = "http://www.birst.com/")
                    String dashName,
            @WebParam(name = "newDashName", targetNamespace = "http://www.birst.com/")
                    String newDashName);

    /**
     * Renames a dashboard page.  Arguments are the Login token, the space id, the dashboard name, the old page name and the new page name
     * 
     * @param dashName
     * @param spaceID
     * @param newPageName
     * @param pageName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/renameDashboardPage")
    @RequestWrapper(localName = "renameDashboardPage", targetNamespace = "http://www.birst.com/", className = "com.birst.RenameDashboardPage")
    @ResponseWrapper(localName = "renameDashboardPageResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RenameDashboardPageResponse")
    void renameDashboardPage(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "dashName", targetNamespace = "http://www.birst.com/")
                    String dashName,
            @WebParam(name = "pageName", targetNamespace = "http://www.birst.com/")
                    String pageName,
            @WebParam(name = "newPageName", targetNamespace = "http://www.birst.com/")
                    String newPageName);

    /**
     * Enables/disables a data source.  Arguments are the Login token, the space id, the name of the data source, and an enabled flag.
     * 
     * @param spaceID
     * @param dataSourceName
     * @param enabled
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/enableSourceInSpace")
    @RequestWrapper(localName = "enableSourceInSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.EnableSourceInSpace")
    @ResponseWrapper(localName = "enableSourceInSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.EnableSourceInSpaceResponse")
    void enableSourceInSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "dataSourceName", targetNamespace = "http://www.birst.com/")
                    String dataSourceName,
            @WebParam(name = "enabled", targetNamespace = "http://www.birst.com/")
                    boolean enabled);

    /**
     * Returns a list of locales in the sytem.  Arguments are the Login token
     * 
     * @param token
     * @return
     *     returns com.birst.ArrayOfLanguage
     */
    @WebMethod(action = "http://www.birst.com/listLanguages")
    @WebResult(name = "listLanguagesResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listLanguages", targetNamespace = "http://www.birst.com/", className = "com.birst.ListLanguages")
    @ResponseWrapper(localName = "listLanguagesResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListLanguagesResponse")
    ArrayOfLanguage listLanguages(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * Returns the locale for a user. Arguments are the Login token, and the user name
     * 
     * @param token
     * @param username
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/getLanguageForUser")
    @WebResult(name = "getLanguageForUserResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getLanguageForUser", targetNamespace = "http://www.birst.com/", className = "com.birst.GetLanguageForUser")
    @ResponseWrapper(localName = "getLanguageForUserResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetLanguageForUserResponse")
    String getLanguageForUser(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "username", targetNamespace = "http://www.birst.com/")
                    String username);

    /**
     * Sets the locale for a user. Arguments are the Login token, the user name and the language id.
     * 
     * @param localeId
     * @param token
     * @param username
     */
    @WebMethod(action = "http://www.birst.com/setLanguageForUser")
    @RequestWrapper(localName = "setLanguageForUser", targetNamespace = "http://www.birst.com/", className = "com.birst.SetLanguageForUser")
    @ResponseWrapper(localName = "setLanguageForUserResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetLanguageForUserResponse")
    void setLanguageForUser(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "username", targetNamespace = "http://www.birst.com/")
                    String username,
            @WebParam(name = "localeId", targetNamespace = "http://www.birst.com/")
                    String localeId);

    /**
     * Sets the space name. Argments are the Login token, the space Id, and the spaceName. The spaceName must be less than 256 characters and required.
     * 
     * @param spaceName
     * @param spaceID
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setSpaceName")
    @RequestWrapper(localName = "setSpaceName", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSpaceName")
    @ResponseWrapper(localName = "setSpaceNameResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSpaceNameResponse")
    void setSpaceName(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "spaceName", targetNamespace = "http://www.birst.com/")
                    String spaceName);

    /**
     * Sets the space comments.  Argments are the Login token, the space Id, and the spaceComments. The spaceName must be less than 2048 characters.
     * 
     * @param spaceID
     * @param spaceComments
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setSpaceComments")
    @RequestWrapper(localName = "setSpaceComments", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSpaceComments")
    @ResponseWrapper(localName = "setSpaceCommentsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSpaceCommentsResponse")
    void setSpaceComments(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "spaceComments", targetNamespace = "http://www.birst.com/")
                    String spaceComments);

    /**
     * Sets the email address for a space.  Argments are the Login token, the space Id, and the email. The email must be in valid format.
     * 
     * @param spaceID
     * @param email
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setEmailFromForSpace")
    @RequestWrapper(localName = "setEmailFromForSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.SetEmailFromForSpace")
    @ResponseWrapper(localName = "setEmailFromForSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetEmailFromForSpaceResponse")
    void setEmailFromForSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "email", targetNamespace = "http://www.birst.com/")
                    String email);

    /**
     * Sets the email subject for a space.  Argments are the Login token, the space Id, and the subject.
     * 
     * @param spaceID
     * @param subject
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setEmailSubjectForSpace")
    @RequestWrapper(localName = "setEmailSubjectForSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.SetEmailSubjectForSpace")
    @ResponseWrapper(localName = "setEmailSubjectForSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetEmailSubjectForSpaceResponse")
    void setEmailSubjectForSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "subject", targetNamespace = "http://www.birst.com/")
                    String subject);

    /**
     * Sets the background color for space.  Argments are the Login token, the space Id, and the background color.
     * 
     * @param spaceID
     * @param bgcolor
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setBackgroundColorForSpace")
    @RequestWrapper(localName = "setBackgroundColorForSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.SetBackgroundColorForSpace")
    @ResponseWrapper(localName = "setBackgroundColorForSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetBackgroundColorForSpaceResponse")
    void setBackgroundColorForSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "bgcolor", targetNamespace = "http://www.birst.com/")
                    String bgcolor);

    /**
     * Sets the foreground color for space.  Argments are the Login token, the space Id, and the foreground color.
     * 
     * @param spaceID
     * @param fgcolor
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setForegroundColorForSpace")
    @RequestWrapper(localName = "setForegroundColorForSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.SetForegroundColorForSpace")
    @ResponseWrapper(localName = "setForegroundColorForSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetForegroundColorForSpaceResponse")
    void setForegroundColorForSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "fgcolor", targetNamespace = "http://www.birst.com/")
                    String fgcolor);

    /**
     * Sets the logo for space.  Argments are the Login token, the space Id, and the byte array.
     * 
     * @param spaceID
     * @param image
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setLogoForSpace")
    @RequestWrapper(localName = "setLogoForSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.SetLogoForSpace")
    @ResponseWrapper(localName = "setLogoForSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetLogoForSpaceResponse")
    void setLogoForSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "image", targetNamespace = "http://www.birst.com/")
                    byte[] image);

    /**
     * Sets the default logo for space.  Argments are the Login token, the space Id.
     * 
     * @param spaceID
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setDefaultLogoForSpace")
    @RequestWrapper(localName = "setDefaultLogoForSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.SetDefaultLogoForSpace")
    @ResponseWrapper(localName = "setDefaultLogoForSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetDefaultLogoForSpaceResponse")
    void setDefaultLogoForSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Gets sources list.  Argments are the Login token, the space Id.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/getSourcesList")
    @WebResult(name = "getSourcesListResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getSourcesList", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSourcesList")
    @ResponseWrapper(localName = "getSourcesListResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSourcesListResponse")
    ArrayOfString getSourcesList(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Gets source data.  Argments are the Login token, the space Id and the sourceName
     * 
     * @param spaceID
     * @param sourceName
     * @param token
     * @return
     *     returns com.birst.StagingTableSubClass
     */
    @WebMethod(action = "http://www.birst.com/getSourceDetails")
    @WebResult(name = "getSourceDetailsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getSourceDetails", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSourceDetails")
    @ResponseWrapper(localName = "getSourceDetailsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSourceDetailsResponse")
    StagingTableSubClass getSourceDetails(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "sourceName", targetNamespace = "http://www.birst.com/")
                    String sourceName);

    /**
     * Sets source data.  Argments are the Login token, the space Id and the source data
     * 
     * @param spaceID
     * @param data
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setSourceDetails")
    @RequestWrapper(localName = "setSourceDetails", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSourceDetails")
    @ResponseWrapper(localName = "setSourceDetailsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSourceDetailsResponse")
    void setSourceDetails(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "data", targetNamespace = "http://www.birst.com/")
                    StagingTableSubClass data);

    /**
     * Adds or Updates Live Access source. Arguments are the login token, space Id, and the source meta data.
     * 
     * @param spaceID
     * @param sourceMetadata
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/mapLiveAccessSource")
    @RequestWrapper(localName = "mapLiveAccessSource", targetNamespace = "http://www.birst.com/", className = "com.birst.MapLiveAccessSource")
    @ResponseWrapper(localName = "mapLiveAccessSourceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.MapLiveAccessSourceResponse")
    void mapLiveAccessSource(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "sourceMetadata", targetNamespace = "http://www.birst.com/")
                    LiveAccessSourceMetadata sourceMetadata);

    /**
     * Gets LiveAccess source data.  Argments are the Login token, the space Id, and the sourceName
     * 
     * @param spaceID
     * @param sourceName
     * @param token
     * @return
     *     returns com.birst.LiveAccessSourceSubClass
     */
    @WebMethod(action = "http://www.birst.com/getLiveAccessSourceDetails")
    @WebResult(name = "getLiveAccessSourceDetailsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getLiveAccessSourceDetails", targetNamespace = "http://www.birst.com/", className = "com.birst.GetLiveAccessSourceDetails")
    @ResponseWrapper(localName = "getLiveAccessSourceDetailsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetLiveAccessSourceDetailsResponse")
    LiveAccessSourceSubClass getLiveAccessSourceDetails(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "sourceName", targetNamespace = "http://www.birst.com/")
                    String sourceName);

    /**
     * Sets LiveAccess source data. Argments are the Login token, the space Id, and source data
     * 
     * @param spaceID
     * @param data
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setLiveAccessSourceDetails")
    @RequestWrapper(localName = "setLiveAccessSourceDetails", targetNamespace = "http://www.birst.com/", className = "com.birst.SetLiveAccessSourceDetails")
    @ResponseWrapper(localName = "setLiveAccessSourceDetailsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetLiveAccessSourceDetailsResponse")
    void setLiveAccessSourceDetails(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "data", targetNamespace = "http://www.birst.com/")
                    LiveAccessSourceSubClass data);

    /**
     * Gets LiveAccess column properties. Argments are the Login token, space Id, sourceName, and column name
     * 
     * @param spaceID
     * @param sourceName
     * @param token
     * @param columnName
     * @return
     *     returns com.birst.LiveAccessSourceColumnSubClass
     */
    @WebMethod(action = "http://www.birst.com/getLiveAccessColumnProperties")
    @WebResult(name = "getLiveAccessColumnPropertiesResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getLiveAccessColumnProperties", targetNamespace = "http://www.birst.com/", className = "com.birst.GetLiveAccessColumnProperties")
    @ResponseWrapper(localName = "getLiveAccessColumnPropertiesResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetLiveAccessColumnPropertiesResponse")
    LiveAccessSourceColumnSubClass getLiveAccessColumnProperties(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "sourceName", targetNamespace = "http://www.birst.com/")
                    String sourceName,
            @WebParam(name = "columnName", targetNamespace = "http://www.birst.com/")
                    String columnName);

    /**
     * Sets LiveAccess column properties. Argments are the Login token, the space Id and the column properties data
     * 
     * @param spaceID
     * @param columnsData
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setLiveAccessColumnProperties")
    @RequestWrapper(localName = "setLiveAccessColumnProperties", targetNamespace = "http://www.birst.com/", className = "com.birst.SetLiveAccessColumnProperties")
    @ResponseWrapper(localName = "setLiveAccessColumnPropertiesResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetLiveAccessColumnPropertiesResponse")
    void setLiveAccessColumnProperties(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "columnsData", targetNamespace = "http://www.birst.com/")
                    LiveAccessSourceColumnSubClass columnsData);

    /**
     * Upload image to report catalog.  Argments are the Login token, the space Id, and the byte array.
     * 
     * @param spaceID
     * @param image
     * @param reportFileName
     * @param dir
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/uploadImageToReportCatalog")
    @RequestWrapper(localName = "uploadImageToReportCatalog", targetNamespace = "http://www.birst.com/", className = "com.birst.UploadImageToReportCatalog")
    @ResponseWrapper(localName = "uploadImageToReportCatalogResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.UploadImageToReportCatalogResponse")
    void uploadImageToReportCatalog(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "dir", targetNamespace = "http://www.birst.com/")
                    String dir,
            @WebParam(name = "reportFileName", targetNamespace = "http://www.birst.com/")
                    String reportFileName,
            @WebParam(name = "image", targetNamespace = "http://www.birst.com/")
                    byte[] image);

    /**
     * Gets the space comments.  Argments are the Login token and the space Id. The spaceName must be less than 2048 characters.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/getSpaceComments")
    @WebResult(name = "getSpaceCommentsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getSpaceComments", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSpaceComments")
    @ResponseWrapper(localName = "getSpaceCommentsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSpaceCommentsResponse")
    String getSpaceComments(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Sets the space processing version.  Argments are the Login token, the space Id, and the processingVersion. The spaceName must be less than 2048 characters.
     * 
     * @param spaceID
     * @param processingVersionName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setSpaceProcessEngineVersion")
    @RequestWrapper(localName = "setSpaceProcessEngineVersion", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSpaceProcessEngineVersion")
    @ResponseWrapper(localName = "setSpaceProcessEngineVersionResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSpaceProcessEngineVersionResponse")
    void setSpaceProcessEngineVersion(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "processingVersionName", targetNamespace = "http://www.birst.com/")
                    String processingVersionName);

    /**
     * Gets the space processign engine version.  Argments are the Login token and the space Id. The spaceName must be less than 2048 characters.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/getSpaceProcessEngineVersion")
    @WebResult(name = "getSpaceProcessEngineVersionResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getSpaceProcessEngineVersion", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSpaceProcessEngineVersion")
    @ResponseWrapper(localName = "getSpaceProcessEngineVersionResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSpaceProcessEngineVersionResponse")
    String getSpaceProcessEngineVersion(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Get ODBC driver meta data.  Arguments are the Login token and the space Id.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns com.birst.MetaDataResult
     */
    @WebMethod(action = "http://www.birst.com/getODBCMetaData")
    @WebResult(name = "getODBCMetaDataResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getODBCMetaData", targetNamespace = "http://www.birst.com/", className = "com.birst.GetODBCMetaData")
    @ResponseWrapper(localName = "getODBCMetaDataResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetODBCMetaDataResponse")
    MetaDataResult getODBCMetaData(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Get ODBC driver meta data - by subject area.  Arguments are the Login token and the space Id.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns com.birst.MetaDataResult
     */
    @WebMethod(action = "http://www.birst.com/getODBCMetaDataSubjectAreas")
    @WebResult(name = "getODBCMetaDataSubjectAreasResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getODBCMetaDataSubjectAreas", targetNamespace = "http://www.birst.com/", className = "com.birst.GetODBCMetaDataSubjectAreas")
    @ResponseWrapper(localName = "getODBCMetaDataSubjectAreasResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetODBCMetaDataSubjectAreasResponse")
    MetaDataResult getODBCMetaDataSubjectAreas(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Creates a profile with default options. Arguments are Login token and Profile Name.
     * 
     * @param name
     * @param description
     * @param token
     * @return
     *     returns com.birst.Profile
     */
    @WebMethod(action = "http://www.birst.com/createProfile")
    @WebResult(name = "createProfileResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "createProfile", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateProfile")
    @ResponseWrapper(localName = "createProfileResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateProfileResponse")
    Profile createProfile(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name,
            @WebParam(name = "description", targetNamespace = "http://www.birst.com/")
                    String description);

    /**
     * Lists all the profiles for an account. Arguments required are Login token and accountID.
     * 
     * @param token
     * @return
     *     returns com.birst.ArrayOfProfile
     */
    @WebMethod(action = "http://www.birst.com/listProfiles")
    @WebResult(name = "listProfilesResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listProfiles", targetNamespace = "http://www.birst.com/", className = "com.birst.ListProfiles")
    @ResponseWrapper(localName = "listProfilesResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListProfilesResponse")
    ArrayOfProfile listProfiles(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * Gets information regarding a profile. Arguments required are Login token and profileID.
     * 
     * @param profileID
     * @param token
     * @return
     *     returns com.birst.Profile
     */
    @WebMethod(action = "http://www.birst.com/getProfile")
    @WebResult(name = "getProfileResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getProfile", targetNamespace = "http://www.birst.com/", className = "com.birst.GetProfile")
    @ResponseWrapper(localName = "getProfileResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetProfileResponse")
    Profile getProfile(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "profileID", targetNamespace = "http://www.birst.com/")
                    String profileID);

    /**
     * Gets information regarding a profile with properties. Arguments required are Login token and profileID.
     * 
     * @param profileID
     * @param token
     * @return
     *     returns com.birst.Profile
     */
    @WebMethod(action = "http://www.birst.com/getProfileDetails")
    @WebResult(name = "getProfileDetailsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getProfileDetails", targetNamespace = "http://www.birst.com/", className = "com.birst.GetProfileDetails")
    @ResponseWrapper(localName = "getProfileDetailsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetProfileDetailsResponse")
    Profile getProfileDetails(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "profileID", targetNamespace = "http://www.birst.com/")
                    String profileID);

    /**
     * Update profile information. Arguments required are Login token and profileID.
     * 
     * @param profileID
     * @param name
     * @param description
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/updateProfile")
    @RequestWrapper(localName = "updateProfile", targetNamespace = "http://www.birst.com/", className = "com.birst.UpdateProfile")
    @ResponseWrapper(localName = "updateProfileResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.UpdateProfileResponse")
    void updateProfile(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "profileID", targetNamespace = "http://www.birst.com/")
                    String profileID,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name,
            @WebParam(name = "description", targetNamespace = "http://www.birst.com/")
                    String description);

    /**
     * Delete the profile. Arguments required are Login token and profileID.
     * 
     * @param profileID
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/deleteProfile")
    @RequestWrapper(localName = "deleteProfile", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteProfile")
    @ResponseWrapper(localName = "deleteProfileResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteProfileResponse")
    void deleteProfile(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "profileID", targetNamespace = "http://www.birst.com/")
                    String profileID);

    /**
     * Gets a property value of profile. Arguments required are Login token, profileID and propertyName.
     * 
     * @param propertyName
     * @param profileID
     * @param locale
     * @param token
     * @return
     *     returns com.birst.ProfileProperty
     */
    @WebMethod(action = "http://www.birst.com/getProfilePropertyWithLocale")
    @WebResult(name = "getProfilePropertyWithLocaleResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getProfilePropertyWithLocale", targetNamespace = "http://www.birst.com/", className = "com.birst.GetProfilePropertyWithLocale")
    @ResponseWrapper(localName = "getProfilePropertyWithLocaleResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetProfilePropertyWithLocaleResponse")
    ProfileProperty getProfilePropertyWithLocale(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "profileID", targetNamespace = "http://www.birst.com/")
                    String profileID,
            @WebParam(name = "propertyName", targetNamespace = "http://www.birst.com/")
                    String propertyName,
            @WebParam(name = "locale", targetNamespace = "http://www.birst.com/")
                    String locale);

    /**
     * Gets a property value of profile. Arguments required are Login token, profileID and propertyName.
     * 
     * @param propertyName
     * @param profileID
     * @param token
     * @return
     *     returns com.birst.ArrayOfProfileProperty
     */
    @WebMethod(action = "http://www.birst.com/getProfileProperty")
    @WebResult(name = "getProfilePropertyResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getProfileProperty", targetNamespace = "http://www.birst.com/", className = "com.birst.GetProfileProperty")
    @ResponseWrapper(localName = "getProfilePropertyResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetProfilePropertyResponse")
    ArrayOfProfileProperty getProfileProperty(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "profileID", targetNamespace = "http://www.birst.com/")
                    String profileID,
            @WebParam(name = "propertyName", targetNamespace = "http://www.birst.com/")
                    String propertyName);

    /**
     * Updates property in a profile. Arguments required are Login token, profileID and ProfileProperty.
     * 
     * @param profileID
     * @param property
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setProfileProperty")
    @RequestWrapper(localName = "setProfileProperty", targetNamespace = "http://www.birst.com/", className = "com.birst.SetProfileProperty")
    @ResponseWrapper(localName = "setProfilePropertyResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetProfilePropertyResponse")
    void setProfileProperty(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "profileID", targetNamespace = "http://www.birst.com/")
                    String profileID,
            @WebParam(name = "property", targetNamespace = "http://www.birst.com/")
                    ProfileProperty property);

    /**
     * Delete locale specific values from property in a profile. Arguments required are Login token, profileID, propertyName and locale.
     * 
     * @param propertyName
     * @param profileID
     * @param locale
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/deleteLocaleValueInProfileProperty")
    @RequestWrapper(localName = "deleteLocaleValueInProfileProperty", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteLocaleValueInProfileProperty")
    @ResponseWrapper(localName = "deleteLocaleValueInProfilePropertyResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteLocaleValueInProfilePropertyResponse")
    void deleteLocaleValueInProfileProperty(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "profileID", targetNamespace = "http://www.birst.com/")
                    String profileID,
            @WebParam(name = "propertyName", targetNamespace = "http://www.birst.com/")
                    String propertyName,
            @WebParam(name = "locale", targetNamespace = "http://www.birst.com/")
                    String locale);

    /**
     * This method links a profile to an account. Arguments required are Login token and profileID.
     * 
     * @param profileID
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/linkProfileToAccount")
    @RequestWrapper(localName = "linkProfileToAccount", targetNamespace = "http://www.birst.com/", className = "com.birst.LinkProfileToAccount")
    @ResponseWrapper(localName = "linkProfileToAccountResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.LinkProfileToAccountResponse")
    void linkProfileToAccount(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "profileID", targetNamespace = "http://www.birst.com/")
                    String profileID);

    /**
     * This method links a profile to multiple users. Arguments required are Login token and profileID.
     * 
     * @param token
     * @param userProfileList
     */
    @WebMethod(action = "http://www.birst.com/linkProfileToUsers")
    @RequestWrapper(localName = "linkProfileToUsers", targetNamespace = "http://www.birst.com/", className = "com.birst.LinkProfileToUsers")
    @ResponseWrapper(localName = "linkProfileToUsersResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.LinkProfileToUsersResponse")
    void linkProfileToUsers(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userProfileList", targetNamespace = "http://www.birst.com/")
                    ArrayOfUserProfileMapping userProfileList);

    /**
     * This method unlinks a profile from multiple users. Arguments required are Login token and profileID.
     * 
     * @param userList
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/unlinkProfileFromUsers")
    @RequestWrapper(localName = "unlinkProfileFromUsers", targetNamespace = "http://www.birst.com/", className = "com.birst.UnlinkProfileFromUsers")
    @ResponseWrapper(localName = "unlinkProfileFromUsersResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.UnlinkProfileFromUsersResponse")
    void unlinkProfileFromUsers(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userList", targetNamespace = "http://www.birst.com/")
                    ArrayOfString userList);

    /**
     * This method unlinks a profile from account. Arguments required are Login token
     * 
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/unlinkProfileFromAccount")
    @RequestWrapper(localName = "unlinkProfileFromAccount", targetNamespace = "http://www.birst.com/", className = "com.birst.UnlinkProfileFromAccount")
    @ResponseWrapper(localName = "unlinkProfileFromAccountResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.UnlinkProfileFromAccountResponse")
    void unlinkProfileFromAccount(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * This method retrives logged-in user profile. Arguments required is Login token
     * 
     * @param token
     * @return
     *     returns com.birst.Profile
     */
    @WebMethod(action = "http://www.birst.com/getUserProfile")
    @WebResult(name = "getUserProfileResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getUserProfile", targetNamespace = "http://www.birst.com/", className = "com.birst.GetUserProfile")
    @ResponseWrapper(localName = "getUserProfileResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetUserProfileResponse")
    Profile getUserProfile(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * This method retrives logged-in user profile with its properties. Arguments required is Login token
     * 
     * @param token
     * @return
     *     returns com.birst.Profile
     */
    @WebMethod(action = "http://www.birst.com/getUserProfileDetails")
    @WebResult(name = "getUserProfileDetailsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getUserProfileDetails", targetNamespace = "http://www.birst.com/", className = "com.birst.GetUserProfileDetails")
    @ResponseWrapper(localName = "getUserProfileDetailsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetUserProfileDetailsResponse")
    Profile getUserProfileDetails(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * This method retrives default profile. Arguments required is Login token
     * 
     * @param token
     * @return
     *     returns com.birst.Profile
     */
    @WebMethod(action = "http://www.birst.com/getDefaultProfile")
    @WebResult(name = "getDefaultProfileResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getDefaultProfile", targetNamespace = "http://www.birst.com/", className = "com.birst.GetDefaultProfile")
    @ResponseWrapper(localName = "getDefaultProfileResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetDefaultProfileResponse")
    Profile getDefaultProfile(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * This method retrives default profile with its properties. Arguments required is Login token
     * 
     * @param token
     * @return
     *     returns com.birst.Profile
     */
    @WebMethod(action = "http://www.birst.com/getDefaultProfileDetails")
    @WebResult(name = "getDefaultProfileDetailsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getDefaultProfileDetails", targetNamespace = "http://www.birst.com/", className = "com.birst.GetDefaultProfileDetails")
    @ResponseWrapper(localName = "getDefaultProfileDetailsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetDefaultProfileDetailsResponse")
    Profile getDefaultProfileDetails(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * This method retrives profile for the given user. Arguments required are Login token and usrename
     * 
     * @param token
     * @param username
     * @return
     *     returns com.birst.Profile
     */
    @WebMethod(action = "http://www.birst.com/getProfileForUser")
    @WebResult(name = "getProfileForUserResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getProfileForUser", targetNamespace = "http://www.birst.com/", className = "com.birst.GetProfileForUser")
    @ResponseWrapper(localName = "getProfileForUserResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetProfileForUserResponse")
    Profile getProfileForUser(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "username", targetNamespace = "http://www.birst.com/")
                    String username);

    /**
     * This method retrives list of users associated with the given profile. Arguments required are Login token and profileID
     * 
     * @param profileId
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/getUsersForProfile")
    @WebResult(name = "getUsersForProfileResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getUsersForProfile", targetNamespace = "http://www.birst.com/", className = "com.birst.GetUsersForProfile")
    @ResponseWrapper(localName = "getUsersForProfileResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetUsersForProfileResponse")
    ArrayOfString getUsersForProfile(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "profileId", targetNamespace = "http://www.birst.com/")
                    String profileId);

    /**
     * Gets the dashboard view that is set for the user
     * 
     * @param parameters
     * @return
     *     returns com.birst.GetDashboardViewResponse
     */
    @WebMethod(action = "http://www.birst.com/getDashboardView")
    @WebResult(name = "getDashboardViewResponse", targetNamespace = "http://www.birst.com/", partName = "parameters")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    GetDashboardViewResponse getDashboardView(
            @WebParam(name = "getDashboardView", targetNamespace = "http://www.birst.com/", partName = "parameters")
                    GetDashboardView parameters);

    /**
     * Set the dashboard view for the user with input username
     * 
     * @param userName
     * @param dashboardView
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setDashboardView")
    @RequestWrapper(localName = "setDashboardView", targetNamespace = "http://www.birst.com/", className = "com.birst.SetDashboardView")
    @ResponseWrapper(localName = "setDashboardViewResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetDashboardViewResponse")
    void setDashboardView(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "dashboardView", targetNamespace = "http://www.birst.com/")
                    String dashboardView);

    /**
     * Rebuilds Indices on the database
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/rebuildIndices")
    @WebResult(name = "rebuildIndicesResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "rebuildIndices", targetNamespace = "http://www.birst.com/", className = "com.birst.RebuildIndices")
    @ResponseWrapper(localName = "rebuildIndicesResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RebuildIndicesResponse")
    String rebuildIndices(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Direct Load Stagingtable from S3 bucket
     * 
     * @param spaceID
     * @param stagingDetails
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/loadStagingtableFromS3Bucket")
    @WebResult(name = "loadStagingtableFromS3BucketResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "loadStagingtableFromS3Bucket", targetNamespace = "http://www.birst.com/", className = "com.birst.LoadStagingtableFromS3Bucket")
    @ResponseWrapper(localName = "loadStagingtableFromS3BucketResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.LoadStagingtableFromS3BucketResponse")
    String loadStagingtableFromS3Bucket(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "stagingDetails", targetNamespace = "http://www.birst.com/")
                    RedshiftStagingDetails stagingDetails);

    /**
     * Add mapping of SFDC account to Birst account
     * 
     * @param sfdcOrgID
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addSfdcAccountMapping")
    @RequestWrapper(localName = "addSfdcAccountMapping", targetNamespace = "http://www.birst.com/", className = "com.birst.AddSfdcAccountMapping")
    @ResponseWrapper(localName = "addSfdcAccountMappingResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddSfdcAccountMappingResponse")
    void addSfdcAccountMapping(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "sfdcOrgID", targetNamespace = "http://www.birst.com/")
                    String sfdcOrgID);

    /**
     * Remove mapping of SFDC account to Birst account
     * 
     * @param sfdcOrgID
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/removeSfdcAccountMapping")
    @RequestWrapper(localName = "removeSfdcAccountMapping", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveSfdcAccountMapping")
    @ResponseWrapper(localName = "removeSfdcAccountMappingResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveSfdcAccountMappingResponse")
    void removeSfdcAccountMapping(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "sfdcOrgID", targetNamespace = "http://www.birst.com/")
                    String sfdcOrgID);

    /**
     * Get mapping of SFDC account to Birst account
     * 
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/getSfdcAccountMapping")
    @WebResult(name = "getSfdcAccountMappingResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getSfdcAccountMapping", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSfdcAccountMapping")
    @ResponseWrapper(localName = "getSfdcAccountMappingResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSfdcAccountMappingResponse")
    ArrayOfString getSfdcAccountMapping(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * Set the flag to deny user to create new space
     * 
     * @param disable
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setDenyAddSpace")
    @RequestWrapper(localName = "setDenyAddSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.SetDenyAddSpace")
    @ResponseWrapper(localName = "setDenyAddSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetDenyAddSpaceResponse")
    void setDenyAddSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "disable", targetNamespace = "http://www.birst.com/")
                    String disable);

    /**
     * add email domains
     * 
     * @param domainList
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addEmailDomains")
    @RequestWrapper(localName = "addEmailDomains", targetNamespace = "http://www.birst.com/", className = "com.birst.AddEmailDomains")
    @ResponseWrapper(localName = "addEmailDomainsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddEmailDomainsResponse")
    void addEmailDomains(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "domainList", targetNamespace = "http://www.birst.com/")
                    ArrayOfString domainList);

    /**
     * List email domains
     * 
     * @param token
     * @return
     *     returns com.birst.ArrayOfEmailDomain
     */
    @WebMethod(action = "http://www.birst.com/listEmailDomains")
    @WebResult(name = "listEmailDomainsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listEmailDomains", targetNamespace = "http://www.birst.com/", className = "com.birst.ListEmailDomains")
    @ResponseWrapper(localName = "listEmailDomainsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListEmailDomainsResponse")
    ArrayOfEmailDomain listEmailDomains(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * Remove email domains
     * 
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/removeEmailDomains")
    @RequestWrapper(localName = "removeEmailDomains", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveEmailDomains")
    @ResponseWrapper(localName = "removeEmailDomainsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveEmailDomainsResponse")
    void removeEmailDomains(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * Creates a new hierarchy in the space specified
     * 
     * @param spaceID
     * @param hmd
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://www.birst.com/createHierarchy")
    @WebResult(name = "createHierarchyResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "createHierarchy", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateHierarchy")
    @ResponseWrapper(localName = "createHierarchyResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateHierarchyResponse")
    boolean createHierarchy(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "hmd", targetNamespace = "http://www.birst.com/")
                    HierarchyMetadata hmd);

    /**
     * Deletes a hierarchy from the space specified
     * 
     * @param spaceID
     * @param hierarchyName
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://www.birst.com/deleteHierarchy")
    @WebResult(name = "deleteHierarchyResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "deleteHierarchy", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteHierarchy")
    @ResponseWrapper(localName = "deleteHierarchyResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteHierarchyResponse")
    boolean deleteHierarchy(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "hierarchyName", targetNamespace = "http://www.birst.com/")
                    String hierarchyName);

    /**
     * Get hierarchy information from the space specified
     * 
     * @param spaceID
     * @param hierarchyName
     * @param token
     * @return
     *     returns com.birst.HierarchyMetadata
     */
    @WebMethod(action = "http://www.birst.com/getHierarchy")
    @WebResult(name = "getHierarchyResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getHierarchy", targetNamespace = "http://www.birst.com/", className = "com.birst.GetHierarchy")
    @ResponseWrapper(localName = "getHierarchyResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetHierarchyResponse")
    HierarchyMetadata getHierarchy(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "hierarchyName", targetNamespace = "http://www.birst.com/")
                    String hierarchyName);

    /**
     * Update hierarchy information for the space specified
     * 
     * @param spaceID
     * @param hierarchyName
     * @param hmd
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://www.birst.com/updateHierarchy")
    @WebResult(name = "updateHierarchyResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "updateHierarchy", targetNamespace = "http://www.birst.com/", className = "com.birst.UpdateHierarchy")
    @ResponseWrapper(localName = "updateHierarchyResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.UpdateHierarchyResponse")
    boolean updateHierarchy(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "hierarchyName", targetNamespace = "http://www.birst.com/")
                    String hierarchyName,
            @WebParam(name = "hmd", targetNamespace = "http://www.birst.com/")
                    HierarchyMetadata hmd);

    /**
     * Get list of hierarchies in the space
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/getAllHierarchies")
    @WebResult(name = "getAllHierarchiesResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getAllHierarchies", targetNamespace = "http://www.birst.com/", className = "com.birst.GetAllHierarchies")
    @ResponseWrapper(localName = "getAllHierarchiesResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetAllHierarchiesResponse")
    ArrayOfString getAllHierarchies(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Returns the response whether current user has access to Web Data Connector
     * 
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://www.birst.com/isWdcAvailable")
    @WebResult(name = "isWdcAvailableResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "isWdcAvailable", targetNamespace = "http://www.birst.com/", className = "com.birst.IsWdcAvailable")
    @ResponseWrapper(localName = "isWdcAvailableResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.IsWdcAvailableResponse")
    boolean isWdcAvailable(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * Gets the properties of the space
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns com.birst.SpaceProperties
     */
    @WebMethod(operationName = "GetSpaceProperties", action = "http://www.birst.com/GetSpaceProperties")
    @WebResult(name = "GetSpacePropertiesResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "GetSpaceProperties", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSpaceProperties")
    @ResponseWrapper(localName = "GetSpacePropertiesResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSpacePropertiesResponse")
    SpaceProperties getSpaceProperties(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Sets the properties of the space. Space has to be in Available state.
     * 
     * @param spaceID
     * @param spaceProperties
     * @param token
     */
    @WebMethod(operationName = "SetSpaceProperties", action = "http://www.birst.com/SetSpaceProperties")
    @RequestWrapper(localName = "SetSpaceProperties", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSpaceProperties")
    @ResponseWrapper(localName = "SetSpacePropertiesResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSpacePropertiesResponse")
    void setSpaceProperties(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "spaceProperties", targetNamespace = "http://www.birst.com/")
                    SpaceProperties spaceProperties);

    /**
     * Log out of this web service.  Pass the Login token as the argument
     * 
     * @param token
     */
    @WebMethod(operationName = "Logout", action = "http://www.birst.com/Logout")
    @RequestWrapper(localName = "Logout", targetNamespace = "http://www.birst.com/", className = "com.birst.Logout")
    @ResponseWrapper(localName = "LogoutResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.LogoutResponse")
    void logout(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * Log in to this web service.  Pass the user name and password of the administrator.  A token will be returned that should be used for all remaining calls.  The token will expire in after a certain amount of inactivity or after logout
     * 
     * @param password
     * @param username
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Login", action = "http://www.birst.com/Login")
    @WebResult(name = "LoginResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "Login", targetNamespace = "http://www.birst.com/", className = "com.birst.Login")
    @ResponseWrapper(localName = "LoginResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.LoginResponse")
    String login(
            @WebParam(name = "username", targetNamespace = "http://www.birst.com/")
                    String username,
            @WebParam(name = "password", targetNamespace = "http://www.birst.com/")
                    String password);

    /**
     * Log in to this web service. Pass the base64 encoded saml assertion. A token will be returned that should be used for all remaining calls.  The token will expire in after a certain amount of inactivity or after logout
     * 
     * @param samlResponse
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "LoginViaSaml", action = "http://www.birst.com/LoginViaSaml")
    @WebResult(name = "LoginViaSamlResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "LoginViaSaml", targetNamespace = "http://www.birst.com/", className = "com.birst.LoginViaSaml")
    @ResponseWrapper(localName = "LoginViaSamlResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.LoginViaSamlResponse")
    String loginViaSaml(
            @WebParam(name = "samlResponse", targetNamespace = "http://www.birst.com/")
                    String samlResponse);

    /**
     * Clears the cache in the space specified.  The arguments are the Login token and the space Id to clear
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://www.birst.com/clearCacheInSpace")
    @WebResult(name = "clearCacheInSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "clearCacheInSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.ClearCacheInSpace")
    @ResponseWrapper(localName = "clearCacheInSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ClearCacheInSpaceResponse")
    boolean clearCacheInSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Swaps 2 spaces.  The arguments are the Login token, and the Id's of the 2 spaces. Returns a job token
     * 
     * @param sp1ID
     * @param sp2ID
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/swapSpaceContents")
    @WebResult(name = "swapSpaceContentsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "swapSpaceContents", targetNamespace = "http://www.birst.com/", className = "com.birst.SwapSpaceContents")
    @ResponseWrapper(localName = "swapSpaceContentsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SwapSpaceContentsResponse")
    String swapSpaceContents(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "sp1ID", targetNamespace = "http://www.birst.com/")
                    String sp1ID,
            @WebParam(name = "sp2ID", targetNamespace = "http://www.birst.com/")
                    String sp2ID);

    /**
     * Swaps 2 spaces and align the created packages (swap the created space IDs in the packages).  The arguments are the Login token, and the names of the 2 spaces. Returns a job token
     * 
     * @param sp2Name
     * @param syncImportedPackages
     * @param sp1Name
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/swapSpaceForPackages")
    @WebResult(name = "swapSpaceForPackagesResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "swapSpaceForPackages", targetNamespace = "http://www.birst.com/", className = "com.birst.SwapSpaceForPackages")
    @ResponseWrapper(localName = "swapSpaceForPackagesResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SwapSpaceForPackagesResponse")
    String swapSpaceForPackages(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "sp1Name", targetNamespace = "http://www.birst.com/")
                    String sp1Name,
            @WebParam(name = "sp2Name", targetNamespace = "http://www.birst.com/")
                    String sp2Name,
            @WebParam(name = "syncImportedPackages", targetNamespace = "http://www.birst.com/")
                    boolean syncImportedPackages);

    /**
     * Copy the contents from one space into another.  The arguments are the Login token, the space Id to copy from and the space Id to copy to. It returns a job token
     * 
     * @param spFromID
     * @param spToID
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/copySpaceContents")
    @WebResult(name = "copySpaceContentsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "copySpaceContents", targetNamespace = "http://www.birst.com/", className = "com.birst.CopySpaceContents")
    @ResponseWrapper(localName = "copySpaceContentsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CopySpaceContentsResponse")
    String copySpaceContents(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spFromID", targetNamespace = "http://www.birst.com/")
                    String spFromID,
            @WebParam(name = "spToID", targetNamespace = "http://www.birst.com/")
                    String spToID);

    /**
     * Copy the contents from one space into another.  The arguments are the Login token, the space Id to copy from, the space Id to copy to, 'replicate' or 'copy' mode, and a command separated list of items to copy. It returns a job token
     * 
     * @param mode
     * @param options
     * @param spFromID
     * @param spToID
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/copySpace")
    @WebResult(name = "copySpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "copySpace", targetNamespace = "http://www.birst.com/", className = "com.birst.CopySpace")
    @ResponseWrapper(localName = "copySpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CopySpaceResponse")
    String copySpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spFromID", targetNamespace = "http://www.birst.com/")
                    String spFromID,
            @WebParam(name = "spToID", targetNamespace = "http://www.birst.com/")
                    String spToID,
            @WebParam(name = "mode", targetNamespace = "http://www.birst.com/")
                    String mode,
            @WebParam(name = "options", targetNamespace = "http://www.birst.com/")
                    String options);

    /**
     * Copy the contents of the catalog from one space to another.  The arguments are the Login token, the space Id to copy from, the space Id to copy to and the name of the directory to start the copy.  It returns a job token
     * 
     * @param spFromID
     * @param spToID
     * @param directoryName
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/copyCatalogDirectory")
    @WebResult(name = "copyCatalogDirectoryResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "copyCatalogDirectory", targetNamespace = "http://www.birst.com/", className = "com.birst.CopyCatalogDirectory")
    @ResponseWrapper(localName = "copyCatalogDirectoryResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CopyCatalogDirectoryResponse")
    String copyCatalogDirectory(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spFromID", targetNamespace = "http://www.birst.com/")
                    String spFromID,
            @WebParam(name = "spToID", targetNamespace = "http://www.birst.com/")
                    String spToID,
            @WebParam(name = "directoryName", targetNamespace = "http://www.birst.com/")
                    String directoryName);

    /**
     * Resets the password for a user.  The arguments are the Login token and the name of the user to reset.
     * 
     * @param token
     * @param username
     */
    @WebMethod(action = "http://www.birst.com/resetPassword")
    @RequestWrapper(localName = "resetPassword", targetNamespace = "http://www.birst.com/", className = "com.birst.ResetPassword")
    @ResponseWrapper(localName = "resetPasswordResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ResetPasswordResponse")
    void resetPassword(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "username", targetNamespace = "http://www.birst.com/")
                    String username);

    /**
     * Gives a user access to a space. The arguments are the Login token, the name of the user to add, the space Id, and if the user is an admin.
     * 
     * @param spaceID
     * @param hasAdmin
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addUserToSpace")
    @RequestWrapper(localName = "addUserToSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.AddUserToSpace")
    @ResponseWrapper(localName = "addUserToSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddUserToSpaceResponse")
    void addUserToSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "hasAdmin", targetNamespace = "http://www.birst.com/")
                    boolean hasAdmin);

    /**
     * Lists all users who have access to a space.  Arguments are the Login token and the space Id.  A list of user names will be returned.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listUsersInSpace")
    @WebResult(name = "listUsersInSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listUsersInSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.ListUsersInSpace")
    @ResponseWrapper(localName = "listUsersInSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListUsersInSpaceResponse")
    ArrayOfString listUsersInSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Removes a user from a space (that user will no longer have access to the space).  Arguments are the Login token, the name of the user and the space Id.
     * 
     * @param spaceID
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/removeUserFromSpace")
    @RequestWrapper(localName = "removeUserFromSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveUserFromSpace")
    @ResponseWrapper(localName = "removeUserFromSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveUserFromSpaceResponse")
    void removeUserFromSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Creates a group in a space.  Argments are the Login token, the name of the group and the space Id.
     * 
     * @param spaceID
     * @param groupName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addGroupToSpace")
    @RequestWrapper(localName = "addGroupToSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.AddGroupToSpace")
    @ResponseWrapper(localName = "addGroupToSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddGroupToSpaceResponse")
    void addGroupToSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "groupName", targetNamespace = "http://www.birst.com/")
                    String groupName,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Removes a group from a space.  Arguments are the Login token, the name of the group and the space Id.
     * 
     * @param spaceID
     * @param groupName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/removeGroupFromSpace")
    @RequestWrapper(localName = "removeGroupFromSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveGroupFromSpace")
    @ResponseWrapper(localName = "removeGroupFromSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveGroupFromSpaceResponse")
    void removeGroupFromSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "groupName", targetNamespace = "http://www.birst.com/")
                    String groupName,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * List the names of the group in a space.  Arguments are the Login token and the space Id.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listGroupsInSpace")
    @WebResult(name = "listGroupsInSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listGroupsInSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.ListGroupsInSpace")
    @ResponseWrapper(localName = "listGroupsInSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListGroupsInSpaceResponse")
    ArrayOfString listGroupsInSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * List all the available ACLs for the logged in account admin.  The method will return a list of ACLs associated with the account.  Arguments are the Login token.
     * 
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/getAvailableACLs")
    @WebResult(name = "getAvailableACLsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getAvailableACLs", targetNamespace = "http://www.birst.com/", className = "com.birst.GetAvailableACLs")
    @ResponseWrapper(localName = "getAvailableACLsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetAvailableACLsResponse")
    ArrayOfString getAvailableACLs(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * List group ACLs in a space.  The method will return a list of ACLs associated with the grroup.  Arguments are the Login token, the name of the group and the space Id.
     * 
     * @param spaceID
     * @param groupName
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listGroupAclsInSpace")
    @WebResult(name = "listGroupAclsInSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listGroupAclsInSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.ListGroupAclsInSpace")
    @ResponseWrapper(localName = "listGroupAclsInSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListGroupAclsInSpaceResponse")
    ArrayOfString listGroupAclsInSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "groupName", targetNamespace = "http://www.birst.com/")
                    String groupName,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Adds an ACL to a group in a space. Arguments are the Login token, the name of the group, the name of the ACL and the space Id.
     * 
     * @param spaceID
     * @param groupName
     * @param aclTag
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addAclToGroupInSpace")
    @RequestWrapper(localName = "addAclToGroupInSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.AddAclToGroupInSpace")
    @ResponseWrapper(localName = "addAclToGroupInSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddAclToGroupInSpaceResponse")
    void addAclToGroupInSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "groupName", targetNamespace = "http://www.birst.com/")
                    String groupName,
            @WebParam(name = "aclTag", targetNamespace = "http://www.birst.com/")
                    String aclTag,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Removes an ACL from a group in a space. Arguments are the Login token, the name of the group, the name of the ACL and the space Id.
     * 
     * @param spaceID
     * @param groupName
     * @param aclTag
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/removeAclFromGroupInSpace")
    @RequestWrapper(localName = "removeAclFromGroupInSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveAclFromGroupInSpace")
    @ResponseWrapper(localName = "removeAclFromGroupInSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveAclFromGroupInSpaceResponse")
    void removeAclFromGroupInSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "groupName", targetNamespace = "http://www.birst.com/")
                    String groupName,
            @WebParam(name = "aclTag", targetNamespace = "http://www.birst.com/")
                    String aclTag,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Adds a user to a group in a space.  Arguments are the Login token, the name of the user to add, the name of the group and the space Id.
     * 
     * @param spaceID
     * @param groupName
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addUserToGroupInSpace")
    @RequestWrapper(localName = "addUserToGroupInSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.AddUserToGroupInSpace")
    @ResponseWrapper(localName = "addUserToGroupInSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddUserToGroupInSpaceResponse")
    void addUserToGroupInSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "groupName", targetNamespace = "http://www.birst.com/")
                    String groupName,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Removes a user from a group.  Arguments are the Login token, the name of the user to remove, the name of the group and the space Id.
     * 
     * @param spaceID
     * @param groupName
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/removeUserFromGroupInSpace")
    @RequestWrapper(localName = "removeUserFromGroupInSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveUserFromGroupInSpace")
    @ResponseWrapper(localName = "removeUserFromGroupInSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveUserFromGroupInSpaceResponse")
    void removeUserFromGroupInSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "groupName", targetNamespace = "http://www.birst.com/")
                    String groupName,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Lists all users in a group for a space. Arguments are Login token, name of group and space Id.
     * 
     * @param spaceID
     * @param groupName
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listUsersInGroupInSpace")
    @WebResult(name = "listUsersInGroupInSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listUsersInGroupInSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.ListUsersInGroupInSpace")
    @ResponseWrapper(localName = "listUsersInGroupInSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListUsersInGroupInSpaceResponse")
    ArrayOfString listUsersInGroupInSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "groupName", targetNamespace = "http://www.birst.com/")
                    String groupName,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Lists all groups that a user belongs to within a space. Arguments are Login token, space Id, user name, include system groups flag.
     * 
     * @param spaceID
     * @param includeInternalGroups
     * @param userName
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listUserGroupMembership")
    @WebResult(name = "listUserGroupMembershipResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listUserGroupMembership", targetNamespace = "http://www.birst.com/", className = "com.birst.ListUserGroupMembership")
    @ResponseWrapper(localName = "listUserGroupMembershipResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListUserGroupMembershipResponse")
    ArrayOfString listUserGroupMembership(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "includeInternalGroups", targetNamespace = "http://www.birst.com/")
                    boolean includeInternalGroups);

    /**
     * List all users who can proxy for a specific user. Arguments are the Login token and the name of the user.
     * 
     * @param userName
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listProxyUsers")
    @WebResult(name = "listProxyUsersResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listProxyUsers", targetNamespace = "http://www.birst.com/", className = "com.birst.ListProxyUsers")
    @ResponseWrapper(localName = "listProxyUsersResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListProxyUsersResponse")
    ArrayOfString listProxyUsers(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName);

    /**
     * List all OpenIDs for a user. Arguments are the Login token and the name of the user.
     * 
     * @param userName
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listOpenIDs")
    @WebResult(name = "listOpenIDsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listOpenIDs", targetNamespace = "http://www.birst.com/", className = "com.birst.ListOpenIDs")
    @ResponseWrapper(localName = "listOpenIDsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListOpenIDsResponse")
    ArrayOfString listOpenIDs(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName);

    /**
     * Adds an OpenID for a user. Arguments are the Login token, the name of the user and the OpenID identifier.
     * 
     * @param openID
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addOpenID")
    @RequestWrapper(localName = "addOpenID", targetNamespace = "http://www.birst.com/", className = "com.birst.AddOpenID")
    @ResponseWrapper(localName = "addOpenIDResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddOpenIDResponse")
    void addOpenID(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "openID", targetNamespace = "http://www.birst.com/")
                    String openID);

    /**
     * Removes an OpenID for a user. Arguments are the Login token, the name of the user and the OpenID identifier.
     * 
     * @param openID
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/removeOpenID")
    @RequestWrapper(localName = "removeOpenID", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveOpenID")
    @ResponseWrapper(localName = "removeOpenIDResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveOpenIDResponse")
    void removeOpenID(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "openID", targetNamespace = "http://www.birst.com/")
                    String openID);

    /**
     * Sets the default space for a user. Arguments are the Login token, the name of the user, the name of the space, and if the user should default to dashboards.
     * 
     * @param spaceID
     * @param userName
     * @param dashboards
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setUserDefaultSpace")
    @RequestWrapper(localName = "setUserDefaultSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.SetUserDefaultSpace")
    @ResponseWrapper(localName = "setUserDefaultSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetUserDefaultSpaceResponse")
    void setUserDefaultSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "dashboards", targetNamespace = "http://www.birst.com/")
                    boolean dashboards);

    /**
     * List all releases. Argument is the Login token.
     * 
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listReleases")
    @WebResult(name = "listReleasesResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listReleases", targetNamespace = "http://www.birst.com/", className = "com.birst.ListReleases")
    @ResponseWrapper(localName = "listReleasesResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListReleasesResponse")
    ArrayOfString listReleases(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * Gets the release for a user. Arguments are the Login token, and the name of the user.
     * 
     * @param userName
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/getUserRelease")
    @WebResult(name = "getUserReleaseResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getUserRelease", targetNamespace = "http://www.birst.com/", className = "com.birst.GetUserRelease")
    @ResponseWrapper(localName = "getUserReleaseResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetUserReleaseResponse")
    String getUserRelease(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName);

    /**
     * Sets the release for a user. Arguments are the Login token, the name of the user and the release.
     * 
     * @param release
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setUserRelease")
    @RequestWrapper(localName = "setUserRelease", targetNamespace = "http://www.birst.com/", className = "com.birst.SetUserRelease")
    @ResponseWrapper(localName = "setUserReleaseResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetUserReleaseResponse")
    void setUserRelease(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "release", targetNamespace = "http://www.birst.com/")
                    String release);

    /**
     * Enables/Disables a User. Arguments are the Login token, a username, and a boolean, if true enable, if false disable
     * 
     * @param enable
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/enableUser")
    @RequestWrapper(localName = "enableUser", targetNamespace = "http://www.birst.com/", className = "com.birst.EnableUser")
    @ResponseWrapper(localName = "enableUserResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.EnableUserResponse")
    void enableUser(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "enable", targetNamespace = "http://www.birst.com/")
                    boolean enable);

    /**
     * Unlocks a User. Arguments are the Login token and a username
     * 
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/unlockUser")
    @RequestWrapper(localName = "unlockUser", targetNamespace = "http://www.birst.com/", className = "com.birst.UnlockUser")
    @ResponseWrapper(localName = "unlockUserResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.UnlockUserResponse")
    void unlockUser(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName);

    /**
     * Deletes a User. Arguments are the Login token and a username
     * 
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/deleteUser")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteUserResponse")
    void deleteUser(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName);

    /**
     * Enables/Disables an Account. Arguments are the Login token, an AccountID, and a boolean, if true enable, if false disable
     * 
     * @param accountID
     * @param enable
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/enableAccount")
    @RequestWrapper(localName = "enableAccount", targetNamespace = "http://www.birst.com/", className = "com.birst.EnableAccount")
    @ResponseWrapper(localName = "enableAccountResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.EnableAccountResponse")
    void enableAccount(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "accountID", targetNamespace = "http://www.birst.com/")
                    String accountID,
            @WebParam(name = "enable", targetNamespace = "http://www.birst.com/")
                    boolean enable);

    /**
     * Adds a new proxy user for a user. Arguments are the Login token, the name of the user and the name of the user who will proxy for the first user.
     * 
     * @param proxyUserName
     * @param expiration
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addProxyUser")
    @RequestWrapper(localName = "addProxyUser", targetNamespace = "http://www.birst.com/", className = "com.birst.AddProxyUser")
    @ResponseWrapper(localName = "addProxyUserResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddProxyUserResponse")
    void addProxyUser(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "proxyUserName", targetNamespace = "http://www.birst.com/")
                    String proxyUserName,
            @WebParam(name = "expiration", targetNamespace = "http://www.birst.com/")
                    XMLGregorianCalendar expiration);

    /**
     * Removes a proxy user for a user.  Arguments are the Login token, the name of the user who has a proxy user and the name of the proxy user.
     * 
     * @param proxyUserName
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/removeProxyUser")
    @RequestWrapper(localName = "removeProxyUser", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveProxyUser")
    @ResponseWrapper(localName = "removeProxyUserResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveProxyUserResponse")
    void removeProxyUser(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "proxyUserName", targetNamespace = "http://www.birst.com/")
                    String proxyUserName);

    /**
     * List all users managed by the logged in user. Arguments are the Login token.
     * 
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listCreatedUsers")
    @WebResult(name = "listCreatedUsersResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listCreatedUsers", targetNamespace = "http://www.birst.com/", className = "com.birst.ListCreatedUsers")
    @ResponseWrapper(localName = "listCreatedUsersResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListCreatedUsersResponse")
    ArrayOfString listCreatedUsers(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * List all users managed by the logged in user. Arguments are the Login token.
     * 
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listManagedUsers")
    @WebResult(name = "listManagedUsersResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listManagedUsers", targetNamespace = "http://www.birst.com/", className = "com.birst.ListManagedUsers")
    @ResponseWrapper(localName = "listManagedUsersResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListManagedUsersResponse")
    ArrayOfString listManagedUsers(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * List IPs/CIDR netblocks that a user is allowed to log in from. Arguments are the Login token and the name of the user.
     * 
     * @param userName
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listAllowedIps")
    @WebResult(name = "listAllowedIpsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listAllowedIps", targetNamespace = "http://www.birst.com/", className = "com.birst.ListAllowedIps")
    @ResponseWrapper(localName = "listAllowedIpsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListAllowedIpsResponse")
    ArrayOfString listAllowedIps(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName);

    /**
     * Add an IP address / CIDR netblock for a user to be able to log in from.  Arguments are the Login token, the name of the user and the IP address / CIDR netblock.
     * 
     * @param ip
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addAllowedIp")
    @RequestWrapper(localName = "addAllowedIp", targetNamespace = "http://www.birst.com/", className = "com.birst.AddAllowedIp")
    @ResponseWrapper(localName = "addAllowedIpResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddAllowedIpResponse")
    void addAllowedIp(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "ip", targetNamespace = "http://www.birst.com/")
                    String ip);

    /**
     * Removes and IP address / CIDR netblock for a user to be able to log in from.  Arguments are the Login token, the name of the user and the IP address / CIDR netblock.
     * 
     * @param ip
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/removeAllowedIp")
    @RequestWrapper(localName = "removeAllowedIp", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveAllowedIp")
    @ResponseWrapper(localName = "removeAllowedIpResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveAllowedIpResponse")
    void removeAllowedIp(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "ip", targetNamespace = "http://www.birst.com/")
                    String ip);

    /**
     * List IPs/CIDR netblocks that a users in the account is allowed to log in from. Argument is the Login token.
     * 
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listAllowedIPAddrsForAccount")
    @WebResult(name = "listAllowedIPAddrsForAccountResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listAllowedIPAddrsForAccount", targetNamespace = "http://www.birst.com/", className = "com.birst.ListAllowedIPAddrsForAccount")
    @ResponseWrapper(localName = "listAllowedIPAddrsForAccountResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListAllowedIPAddrsForAccountResponse")
    ArrayOfString listAllowedIPAddrsForAccount(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * Add an IP address / CIDR netblock for users in the account to be able to log in from.  Arguments are the Login token and the IP address / CIDR netblock.
     * 
     * @param ip
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addAllowedIPAddrForAccount")
    @RequestWrapper(localName = "addAllowedIPAddrForAccount", targetNamespace = "http://www.birst.com/", className = "com.birst.AddAllowedIPAddrForAccount")
    @ResponseWrapper(localName = "addAllowedIPAddrForAccountResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddAllowedIPAddrForAccountResponse")
    void addAllowedIPAddrForAccount(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "ip", targetNamespace = "http://www.birst.com/")
                    String ip);

    /**
     * Removes and IP address / CIDR netblock for users in the account to be able to log in from.  Arguments are the Login token and the IP address / CIDR netblock.
     * 
     * @param ip
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/removeAllowedIPAddrForAccount")
    @RequestWrapper(localName = "removeAllowedIPAddrForAccount", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveAllowedIPAddrForAccount")
    @ResponseWrapper(localName = "removeAllowedIPAddrForAccountResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveAllowedIPAddrForAccountResponse")
    void removeAllowedIPAddrForAccount(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "ip", targetNamespace = "http://www.birst.com/")
                    String ip);

    /**
     * Sets a variable value.  Arguments are the Login token, the name of the variable, the value (query) of the variable and the space Id.
     * 
     * @param spaceID
     * @param varName
     * @param query
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setVariableInSpace")
    @RequestWrapper(localName = "setVariableInSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.SetVariableInSpace")
    @ResponseWrapper(localName = "setVariableInSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetVariableInSpaceResponse")
    void setVariableInSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "varName", targetNamespace = "http://www.birst.com/")
                    String varName,
            @WebParam(name = "query", targetNamespace = "http://www.birst.com/")
                    String query,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Creates a new user. Arguments are the Login token, the name of the user and additional parameters. The username must be unique in the Birst system. Additional parameters are a list of name=value pairs separated by spaces. Valid names are 'password=', 'email=', for example 'password=foo email=foo@bar.com'.  If an email address is specified it must be unique. If an email address is not specified, the username is used.
     * 
     * @param additionalParams
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addUser")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://www.birst.com/", className = "com.birst.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddUserResponse")
    void addUser(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "additionalParams", targetNamespace = "http://www.birst.com/")
                    String additionalParams);

    /**
     * Adds a product for the user. Arguments are the Login token, the name of the user and product id.
     * 
     * @param productId
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addProductToUser")
    @RequestWrapper(localName = "addProductToUser", targetNamespace = "http://www.birst.com/", className = "com.birst.AddProductToUser")
    @ResponseWrapper(localName = "addProductToUserResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddProductToUserResponse")
    void addProductToUser(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "productId", targetNamespace = "http://www.birst.com/")
                    int productId);

    /**
     * Remove a product from the user. Arguments are the Login token, the name of the user and product id.
     * 
     * @param productId
     * @param userName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/removeProductFromUser")
    @RequestWrapper(localName = "removeProductFromUser", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveProductFromUser")
    @ResponseWrapper(localName = "removeProductFromUserResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveProductFromUserResponse")
    void removeProductFromUser(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "productId", targetNamespace = "http://www.birst.com/")
                    int productId);

    /**
     * Execute a Birst Logical Query.  Arguments are the Login token, the Birst logical query, and the space Id. Returns the first 1000 results.  See queryMore for retrieving the remainder.
     * 
     * @param spaceID
     * @param query
     * @param token
     * @return
     *     returns com.birst.CommandQueryResult
     */
    @WebMethod(action = "http://www.birst.com/executeQueryInSpace")
    @WebResult(name = "executeQueryInSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "executeQueryInSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.ExecuteQueryInSpace")
    @ResponseWrapper(localName = "executeQueryInSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ExecuteQueryInSpaceResponse")
    CommandQueryResult executeQueryInSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "query", targetNamespace = "http://www.birst.com/")
                    String query,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Execute a Birst Logical Query.  Arguments are the Login token, the Birst logical query, the space Id and the query options. Query options contains the 'batchSize', which is 1000 by default. Returns the first few results as specified in 'batchSize'. See queryMore for retrieving the remainder.
     * 
     * @param spaceID
     * @param queryOptions
     * @param query
     * @param token
     * @return
     *     returns com.birst.CommandQueryResult
     */
    @WebMethod(action = "http://www.birst.com/executeQueryInSpaceWithOptions")
    @WebResult(name = "executeQueryInSpaceWithOptionsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "executeQueryInSpaceWithOptions", targetNamespace = "http://www.birst.com/", className = "com.birst.ExecuteQueryInSpaceWithOptions")
    @ResponseWrapper(localName = "executeQueryInSpaceWithOptionsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ExecuteQueryInSpaceWithOptionsResponse")
    CommandQueryResult executeQueryInSpaceWithOptions(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "query", targetNamespace = "http://www.birst.com/")
                    String query,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "queryOptions", targetNamespace = "http://www.birst.com/")
                    ArrayOfQueryOptionOfStringString queryOptions);

    /**
     * Gets the data from a report.  Arguments are the Login token, the report name, and the space Id. Returns the first 1000 results.  See queryMore for retrieving the remainder.
     * 
     * @param spaceID
     * @param reportName
     * @param reportFilters
     * @param token
     * @return
     *     returns com.birst.CommandQueryResult
     */
    @WebMethod(action = "http://www.birst.com/getReportData")
    @WebResult(name = "getReportDataResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getReportData", targetNamespace = "http://www.birst.com/", className = "com.birst.GetReportData")
    @ResponseWrapper(localName = "getReportDataResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetReportDataResponse")
    CommandQueryResult getReportData(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "reportName", targetNamespace = "http://www.birst.com/")
                    String reportName,
            @WebParam(name = "reportFilters", targetNamespace = "http://www.birst.com/")
                    ArrayOfFilter reportFilters);

    /**
     * Return additional results from a previously executed Birst Logical Query.  Arguments are the Login token and the query token from the previous logical query. Returns the next 1000 results.
     * 
     * @param queryToken
     * @param token
     * @return
     *     returns com.birst.CommandQueryResult
     */
    @WebMethod(action = "http://www.birst.com/queryMore")
    @WebResult(name = "queryMoreResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "queryMore", targetNamespace = "http://www.birst.com/", className = "com.birst.QueryMore")
    @ResponseWrapper(localName = "queryMoreResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.QueryMoreResponse")
    CommandQueryResult queryMore(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "queryToken", targetNamespace = "http://www.birst.com/")
                    String queryToken);

    /**
     * Creates an empty dashboard collection. Arguments are the Login token, the space Id, the collection type and the collection name.
     * 
     * @param spaceID
     * @param collectionType
     * @param token
     * @param collectionName
     */
    @WebMethod(action = "http://www.birst.com/createDashboardCollection")
    @RequestWrapper(localName = "createDashboardCollection", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateDashboardCollection")
    @ResponseWrapper(localName = "createDashboardCollectionResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateDashboardCollectionResponse")
    void createDashboardCollection(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "collectionType", targetNamespace = "http://www.birst.com/")
                    String collectionType,
            @WebParam(name = "collectionName", targetNamespace = "http://www.birst.com/")
                    String collectionName);

    /**
     * Creates an expression.  Arguments are the Login token, the space Id and the Expression to create.
     * 
     * @param spaceID
     * @param expression
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/createExpression")
    @RequestWrapper(localName = "createExpression", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateExpression")
    @ResponseWrapper(localName = "createExpressionResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateExpressionResponse")
    void createExpression(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "expression", targetNamespace = "http://www.birst.com/")
                    SavedExpression expression);

    /**
     * Updates an existing expression.  Arguments are the Login token, the space Id and the Expression to update.
     * 
     * @param spaceID
     * @param expression
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/updateExpression")
    @RequestWrapper(localName = "updateExpression", targetNamespace = "http://www.birst.com/", className = "com.birst.UpdateExpression")
    @ResponseWrapper(localName = "updateExpressionResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.UpdateExpressionResponse")
    void updateExpression(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "expression", targetNamespace = "http://www.birst.com/")
                    SavedExpression expression);

    /**
     * Deletes an existing expression.  Arguments are the Login token, the space Id and the Expression to delete.
     * 
     * @param spaceID
     * @param expressionName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/deleteExpression")
    @RequestWrapper(localName = "deleteExpression", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteExpression")
    @ResponseWrapper(localName = "deleteExpressionResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteExpressionResponse")
    void deleteExpression(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "expressionName", targetNamespace = "http://www.birst.com/")
                    String expressionName);

    /**
     * Gets an existing expression.  Arguments are the Login token, the space Id and the Expression to get.
     * 
     * @param spaceID
     * @param expressionName
     * @param token
     * @return
     *     returns com.birst.SavedExpression
     */
    @WebMethod(action = "http://www.birst.com/getExpression")
    @WebResult(name = "getExpressionResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getExpression", targetNamespace = "http://www.birst.com/", className = "com.birst.GetExpression")
    @ResponseWrapper(localName = "getExpressionResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetExpressionResponse")
    SavedExpression getExpression(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "expressionName", targetNamespace = "http://www.birst.com/")
                    String expressionName);

    /**
     * Creates a visualizer report from a BQL query. Arguments are the Login token, the space Id, the report path, the report name and the BQL query .
     * 
     * @param spaceID
     * @param reportName
     * @param reportPath
     * @param query
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/saveQueryReport")
    @RequestWrapper(localName = "saveQueryReport", targetNamespace = "http://www.birst.com/", className = "com.birst.SaveQueryReport")
    @ResponseWrapper(localName = "saveQueryReportResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SaveQueryReportResponse")
    void saveQueryReport(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "reportPath", targetNamespace = "http://www.birst.com/")
                    String reportPath,
            @WebParam(name = "reportName", targetNamespace = "http://www.birst.com/")
                    String reportName,
            @WebParam(name = "query", targetNamespace = "http://www.birst.com/")
                    String query);

    /**
     * Replaces all occurences of the existing global expression in a report with the new global expression. Arguments are the Login token, the space Id, the report path, the report name, the existing global expression name and the new global expression name .
     * 
     * @param spaceID
     * @param reportName
     * @param reportPath
     * @param existingGlobalExpressionName
     * @param newGlobalExpressionName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/replaceExpressionInReport")
    @RequestWrapper(localName = "replaceExpressionInReport", targetNamespace = "http://www.birst.com/", className = "com.birst.ReplaceExpressionInReport")
    @ResponseWrapper(localName = "replaceExpressionInReportResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ReplaceExpressionInReportResponse")
    void replaceExpressionInReport(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "reportPath", targetNamespace = "http://www.birst.com/")
                    String reportPath,
            @WebParam(name = "reportName", targetNamespace = "http://www.birst.com/")
                    String reportName,
            @WebParam(name = "existingGlobalExpressionName", targetNamespace = "http://www.birst.com/")
                    String existingGlobalExpressionName,
            @WebParam(name = "newGlobalExpressionName", targetNamespace = "http://www.birst.com/")
                    String newGlobalExpressionName);

    /**
     * Start a file upload.  Arguments are the Login token, the Space ID and the name of the source. Returns a data upload token.
     * 
     * @param spaceID
     * @param sourceName
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/beginDataUpload")
    @WebResult(name = "beginDataUploadResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "beginDataUpload", targetNamespace = "http://www.birst.com/", className = "com.birst.BeginDataUpload")
    @ResponseWrapper(localName = "beginDataUploadResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.BeginDataUploadResponse")
    String beginDataUpload(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "sourceName", targetNamespace = "http://www.birst.com/")
                    String sourceName);

    /**
     * Sets Data upload options for a particular source.  Arguments are the Login token, the data upload token and an array of options in the form of optionName=optionValue.  Valid options are ConsolidateIdenticalStructures=[true|false], ColumnNamesInFirstRow=[true|false], FilterLikelyNoDataRows=[true|false], LockDataSourceFormat=[true|false], IgnoreQuotesNotAtStartOrEnd=[true|false], RowsToSkipAtStart=n, RowsToSkipAtEnd=n, CharacterEncoding=enc, Separator=<char>
     * 
     * @param options
     * @param dataUploadToken
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setDataUploadOptions")
    @RequestWrapper(localName = "setDataUploadOptions", targetNamespace = "http://www.birst.com/", className = "com.birst.SetDataUploadOptions")
    @ResponseWrapper(localName = "setDataUploadOptionsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetDataUploadOptionsResponse")
    void setDataUploadOptions(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "dataUploadToken", targetNamespace = "http://www.birst.com/")
                    String dataUploadToken,
            @WebParam(name = "options", targetNamespace = "http://www.birst.com/")
                    ArrayOfString options);

    /**
     * Uploads a chunk of data from a particular source.  Arguments are Login token, data upload token, the number of bytes sent and a byte array of data.  Typically the data would be chunked instead of sending the entire file for performance.
     * 
     * @param numBytes
     * @param data
     * @param dataUploadToken
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/uploadData")
    @RequestWrapper(localName = "uploadData", targetNamespace = "http://www.birst.com/", className = "com.birst.UploadData")
    @ResponseWrapper(localName = "uploadDataResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.UploadDataResponse")
    void uploadData(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "dataUploadToken", targetNamespace = "http://www.birst.com/")
                    String dataUploadToken,
            @WebParam(name = "numBytes", targetNamespace = "http://www.birst.com/")
                    int numBytes,
            @WebParam(name = "data", targetNamespace = "http://www.birst.com/")
                    byte[] data);

    /**
     * Called after the last chunk of data is uploaded for a particular data source.  This causes the system to start analyzing the data, which could take some time.  This web service will return immediately, but status can be polled with isJobComplete and getJobStatus. Arguments are Login token, and data upload token.
     * 
     * @param dataUploadToken
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/finishDataUpload")
    @RequestWrapper(localName = "finishDataUpload", targetNamespace = "http://www.birst.com/", className = "com.birst.FinishDataUpload")
    @ResponseWrapper(localName = "finishDataUploadResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.FinishDataUploadResponse")
    void finishDataUpload(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "dataUploadToken", targetNamespace = "http://www.birst.com/")
                    String dataUploadToken);

    /**
     * Deprecated, replaced with isJobComplete. Called to see if the data that was uploaded has finished processing.  Arguments are the Login token and the data upload token. Returns true if processing is complete and false otherwise.
     * 
     * @param dataUploadToken
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://www.birst.com/isDataUploadComplete")
    @WebResult(name = "isDataUploadCompleteResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "isDataUploadComplete", targetNamespace = "http://www.birst.com/", className = "com.birst.IsDataUploadComplete")
    @ResponseWrapper(localName = "isDataUploadCompleteResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.IsDataUploadCompleteResponse")
    boolean isDataUploadComplete(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "dataUploadToken", targetNamespace = "http://www.birst.com/")
                    String dataUploadToken);

    /**
     * Deprecated, replaced with getJobStatus. Called the get the status after data upload processing is complete.  Arguments include the Login token and the data upload token.  Returns an array of statuses, some of which could be warnings and some of which could be errors.
     * 
     * @param dataUploadToken
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/getDataUploadStatus")
    @WebResult(name = "getDataUploadStatusResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getDataUploadStatus", targetNamespace = "http://www.birst.com/", className = "com.birst.GetDataUploadStatus")
    @ResponseWrapper(localName = "getDataUploadStatusResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetDataUploadStatusResponse")
    ArrayOfString getDataUploadStatus(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "dataUploadToken", targetNamespace = "http://www.birst.com/")
                    String dataUploadToken);

    /**
     * Called to see if an asychonous job has finished processing.  Arguments are the Login token and the job token. Returns true if processing is complete and false otherwise.
     * 
     * @param jobToken
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://www.birst.com/isJobComplete")
    @WebResult(name = "isJobCompleteResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "isJobComplete", targetNamespace = "http://www.birst.com/", className = "com.birst.IsJobComplete")
    @ResponseWrapper(localName = "isJobCompleteResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.IsJobCompleteResponse")
    boolean isJobComplete(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "jobToken", targetNamespace = "http://www.birst.com/")
                    String jobToken);

    /**
     * Get the status of an asynchronous job after it has completed.  Arguments include the Login token and the job token.  Returns an XML representation of the status.
     * 
     * @param jobToken
     * @param token
     * @return
     *     returns com.birst.StatusResult
     */
    @WebMethod(action = "http://www.birst.com/getJobStatus")
    @WebResult(name = "getJobStatusResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getJobStatus", targetNamespace = "http://www.birst.com/", className = "com.birst.GetJobStatus")
    @ResponseWrapper(localName = "getJobStatusResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetJobStatusResponse")
    StatusResult getJobStatus(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "jobToken", targetNamespace = "http://www.birst.com/")
                    String jobToken);

    /**
     * Start the processing of uploaded data sources. Arguments are Login token, space id, subgroups (if defined in the space), and the date to use as the load date.  Returns a publishing token.  Call getJobStatus and isJobComplete to check the status.
     * 
     * @param date
     * @param spaceID
     * @param subgroups
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/publishData")
    @WebResult(name = "publishDataResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "publishData", targetNamespace = "http://www.birst.com/", className = "com.birst.PublishData")
    @ResponseWrapper(localName = "publishDataResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.PublishDataResponse")
    String publishData(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "subgroups", targetNamespace = "http://www.birst.com/")
                    ArrayOfString subgroups,
            @WebParam(name = "date", targetNamespace = "http://www.birst.com/")
                    XMLGregorianCalendar date);

    /**
     * Deprecated, replaced with isJobComplete. Determines if publishing has completed. Arguments are Login token and publishing token.  Return true if publishing has completed and false otherwise.
     * 
     * @param publishingToken
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://www.birst.com/isPublishingComplete")
    @WebResult(name = "isPublishingCompleteResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "isPublishingComplete", targetNamespace = "http://www.birst.com/", className = "com.birst.IsPublishingComplete")
    @ResponseWrapper(localName = "isPublishingCompleteResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.IsPublishingCompleteResponse")
    boolean isPublishingComplete(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "publishingToken", targetNamespace = "http://www.birst.com/")
                    String publishingToken);

    /**
     * Deprecated, replaced with getJobStatus. Called the get the status after publishing processing is complete.  Arguments include the Login token and the publishing token.  Returns an array of statuses, some of which could be warnings and some of which could be errors.
     * 
     * @param publishingToken
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/getPublishingStatus")
    @WebResult(name = "getPublishingStatusResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getPublishingStatus", targetNamespace = "http://www.birst.com/", className = "com.birst.GetPublishingStatus")
    @ResponseWrapper(localName = "getPublishingStatusResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetPublishingStatusResponse")
    ArrayOfString getPublishingStatus(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "publishingToken", targetNamespace = "http://www.birst.com/")
                    String publishingToken);

    /**
     * List of variables and values defined for a space.  Arguments are Login token and space id.  Returns an array of arrays, each of which is a name value pair
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns com.birst.ArrayOfArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/getVariablesForSpace")
    @WebResult(name = "getVariablesForSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getVariablesForSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.GetVariablesForSpace")
    @ResponseWrapper(localName = "getVariablesForSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetVariablesForSpaceResponse")
    ArrayOfArrayOfString getVariablesForSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * List the files and directories in a directory for a space.  Arguments are Login token, space id and directory (null value means top level).  Returns an XML representation of the contents of the directory.
     * 
     * @param spaceID
     * @param dir
     * @param token
     * @return
     *     returns com.birst.FileNode
     */
    @WebMethod(action = "http://www.birst.com/getDirectoryContents")
    @WebResult(name = "getDirectoryContentsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getDirectoryContents", targetNamespace = "http://www.birst.com/", className = "com.birst.GetDirectoryContents")
    @ResponseWrapper(localName = "getDirectoryContentsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetDirectoryContentsResponse")
    FileNode getDirectoryContents(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "dir", targetNamespace = "http://www.birst.com/")
                    String dir);

    /**
     * List the permissions for a particular directory.  Arguments are Login token, space Id and directory (a null value means top level).  Returns an XML representation of the directory permissions.
     * 
     * @param spaceID
     * @param dir
     * @param token
     * @return
     *     returns com.birst.ArrayOfGroupPermission
     */
    @WebMethod(action = "http://www.birst.com/getDirectoryPermissions")
    @WebResult(name = "getDirectoryPermissionsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getDirectoryPermissions", targetNamespace = "http://www.birst.com/", className = "com.birst.GetDirectoryPermissions")
    @ResponseWrapper(localName = "getDirectoryPermissionsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetDirectoryPermissionsResponse")
    ArrayOfGroupPermission getDirectoryPermissions(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "dir", targetNamespace = "http://www.birst.com/")
                    String dir);

    /**
     * Sets a permission on a directory.  Arguments are Login token, space id, directory, group name, permission and value for permission.
     * 
     * @param spaceID
     * @param groupName
     * @param permission
     * @param dir
     * @param token
     * @param permissionName
     */
    @WebMethod(action = "http://www.birst.com/setDirectoryPermission")
    @RequestWrapper(localName = "setDirectoryPermission", targetNamespace = "http://www.birst.com/", className = "com.birst.SetDirectoryPermission")
    @ResponseWrapper(localName = "setDirectoryPermissionResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetDirectoryPermissionResponse")
    void setDirectoryPermission(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "dir", targetNamespace = "http://www.birst.com/")
                    String dir,
            @WebParam(name = "groupName", targetNamespace = "http://www.birst.com/")
                    String groupName,
            @WebParam(name = "permissionName", targetNamespace = "http://www.birst.com/")
                    String permissionName,
            @WebParam(name = "permission", targetNamespace = "http://www.birst.com/")
                    boolean permission);

    /**
     * Sets permissions for a user on a space (bulk operation).  Arguments are Login token, space id, directories, group names, permissions and values for permissions.
     * 
     * @param spaceID
     * @param dirs
     * @param perms
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setDirectoryPermissions")
    @RequestWrapper(localName = "setDirectoryPermissions", targetNamespace = "http://www.birst.com/", className = "com.birst.SetDirectoryPermissions")
    @ResponseWrapper(localName = "setDirectoryPermissionsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetDirectoryPermissionsResponse")
    void setDirectoryPermissions(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "dirs", targetNamespace = "http://www.birst.com/")
                    ArrayOfString dirs,
            @WebParam(name = "perms", targetNamespace = "http://www.birst.com/")
                    ArrayOfArrayOfGroupPermission perms);

    /**
     * Sets permissions for a user on a space (bulk operation).  Arguments are Login token, space id, directories, group names, permissions and values for permissions.
     * 
     * @param spaceID
     * @param catalogPermission
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setCatalogPermissions")
    @RequestWrapper(localName = "setCatalogPermissions", targetNamespace = "http://www.birst.com/", className = "com.birst.SetCatalogPermissions")
    @ResponseWrapper(localName = "setCatalogPermissionsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetCatalogPermissionsResponse")
    void setCatalogPermissions(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "CatalogPermission", targetNamespace = "http://www.birst.com/")
                    List<SetCatalogPermission> catalogPermission);

    /**
     * Copy a report or folder from one space folder to another folder.  Arguments are Login token, from space id, from report or directory name, to space id and to directory name.  It returns a job token
     * 
     * @param toDir
     * @param fileOrDir
     * @param toSpaceID
     * @param fromSpaceID
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/copyFileOrDirectory")
    @WebResult(name = "copyFileOrDirectoryResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "copyFileOrDirectory", targetNamespace = "http://www.birst.com/", className = "com.birst.CopyFileOrDirectory")
    @ResponseWrapper(localName = "copyFileOrDirectoryResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CopyFileOrDirectoryResponse")
    String copyFileOrDirectory(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "fromSpaceID", targetNamespace = "http://www.birst.com/")
                    String fromSpaceID,
            @WebParam(name = "fileOrDir", targetNamespace = "http://www.birst.com/")
                    String fileOrDir,
            @WebParam(name = "toSpaceID", targetNamespace = "http://www.birst.com/")
                    String toSpaceID,
            @WebParam(name = "toDir", targetNamespace = "http://www.birst.com/")
                    String toDir);

    /**
     * Copy a report from one space folder to another folder or file.  Arguments are Login token, from space id, from report name, to space id, to directory or report name, and overwrite flag
     * 
     * @param toFileOrDir
     * @param toSpaceID
     * @param fromFileOrDir
     * @param overwrite
     * @param fromSpaceID
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/copyFile")
    @RequestWrapper(localName = "copyFile", targetNamespace = "http://www.birst.com/", className = "com.birst.CopyFile")
    @ResponseWrapper(localName = "copyFileResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CopyFileResponse")
    void copyFile(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "fromSpaceID", targetNamespace = "http://www.birst.com/")
                    String fromSpaceID,
            @WebParam(name = "fromFileOrDir", targetNamespace = "http://www.birst.com/")
                    String fromFileOrDir,
            @WebParam(name = "toSpaceID", targetNamespace = "http://www.birst.com/")
                    String toSpaceID,
            @WebParam(name = "toFileOrDir", targetNamespace = "http://www.birst.com/")
                    String toFileOrDir,
            @WebParam(name = "overwrite", targetNamespace = "http://www.birst.com/")
                    boolean overwrite);

    /**
     * Delete a catalog entry or folder.  Arguments are login token, space id and name of the entry or folder.
     * 
     * @param spaceID
     * @param fileOrDir
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/deleteFileOrDirectory")
    @RequestWrapper(localName = "deleteFileOrDirectory", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteFileOrDirectory")
    @ResponseWrapper(localName = "deleteFileOrDirectoryResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteFileOrDirectoryResponse")
    void deleteFileOrDirectory(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "fileOrDir", targetNamespace = "http://www.birst.com/")
                    String fileOrDir);

    /**
     * Rename a catalog entry or folder.  Arguments are login token, space id, name of entry or folder and the new name.
     * 
     * @param spaceID
     * @param newName
     * @param fileOrDir
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/renameFileOrDirectory")
    @RequestWrapper(localName = "renameFileOrDirectory", targetNamespace = "http://www.birst.com/", className = "com.birst.RenameFileOrDirectory")
    @ResponseWrapper(localName = "renameFileOrDirectoryResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RenameFileOrDirectoryResponse")
    void renameFileOrDirectory(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "fileOrDir", targetNamespace = "http://www.birst.com/")
                    String fileOrDir,
            @WebParam(name = "newName", targetNamespace = "http://www.birst.com/")
                    String newName);

    /**
     * Create a new catalog folder. Arguments are login token, space id, name of parent folder and the new folder name.
     * 
     * @param spaceID
     * @param newDirectoryName
     * @param parentDir
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/createNewDirectory")
    @RequestWrapper(localName = "createNewDirectory", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateNewDirectory")
    @ResponseWrapper(localName = "createNewDirectoryResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateNewDirectoryResponse")
    void createNewDirectory(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "parentDir", targetNamespace = "http://www.birst.com/")
                    String parentDir,
            @WebParam(name = "newDirectoryName", targetNamespace = "http://www.birst.com/")
                    String newDirectoryName);

    /**
     * Create a new folder. If it already exists, returns false else returns true. Arguments are login token, space id, name of parent folder and the new folder name.
     * 
     * @param spaceID
     * @param newDirectoryName
     * @param parentDir
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://www.birst.com/checkAndCreateDirectory")
    @WebResult(name = "checkAndCreateDirectoryResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "checkAndCreateDirectory", targetNamespace = "http://www.birst.com/", className = "com.birst.CheckAndCreateDirectory")
    @ResponseWrapper(localName = "checkAndCreateDirectoryResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CheckAndCreateDirectoryResponse")
    boolean checkAndCreateDirectory(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "parentDir", targetNamespace = "http://www.birst.com/")
                    String parentDir,
            @WebParam(name = "newDirectoryName", targetNamespace = "http://www.birst.com/")
                    String newDirectoryName);

    /**
     * Check if a space is in an extraction, upload, or processing stage.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/getLoadStatus")
    @WebResult(name = "getLoadStatusResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getLoadStatus", targetNamespace = "http://www.birst.com/", className = "com.birst.GetLoadStatus")
    @ResponseWrapper(localName = "getLoadStatusResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetLoadStatusResponse")
    String getLoadStatus(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Create a new space.  Arguments are Login token, name of space, comments, and automatic.
     * 
     * @param spaceName
     * @param comments
     * @param automatic
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/createNewSpace")
    @WebResult(name = "createNewSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "createNewSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateNewSpace")
    @ResponseWrapper(localName = "createNewSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateNewSpaceResponse")
    String createNewSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceName", targetNamespace = "http://www.birst.com/")
                    String spaceName,
            @WebParam(name = "comments", targetNamespace = "http://www.birst.com/")
                    String comments,
            @WebParam(name = "automatic", targetNamespace = "http://www.birst.com/")
                    boolean automatic);

    /**
     * Create a new space.  Arguments are Login token, name of space, name of schema, comments, and automatic.
     * 
     * @param spaceName
     * @param comments
     * @param automatic
     * @param schemaName
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/createNewSpaceUsingSchema")
    @WebResult(name = "createNewSpaceUsingSchemaResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "createNewSpaceUsingSchema", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateNewSpaceUsingSchema")
    @ResponseWrapper(localName = "createNewSpaceUsingSchemaResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateNewSpaceUsingSchemaResponse")
    String createNewSpaceUsingSchema(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceName", targetNamespace = "http://www.birst.com/")
                    String spaceName,
            @WebParam(name = "schemaName", targetNamespace = "http://www.birst.com/")
                    String schemaName,
            @WebParam(name = "comments", targetNamespace = "http://www.birst.com/")
                    String comments,
            @WebParam(name = "automatic", targetNamespace = "http://www.birst.com/")
                    boolean automatic);

    /**
     * Delete a space.  Arguments are Login token, and space id. Returns a job token
     * 
     * @param spaceId
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/deleteSpace")
    @WebResult(name = "deleteSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "deleteSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteSpace")
    @ResponseWrapper(localName = "deleteSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteSpaceResponse")
    String deleteSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceId", targetNamespace = "http://www.birst.com/")
                    String spaceId);

    /**
     * Copy a custom subject area from one space to another. Arguments include Login token, from space id, name of the custom subject area to copy and the destination space id.
     * 
     * @param toSpaceId
     * @param customSubjectAreaName
     * @param fromSpaceId
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/copyCustomSubjectArea")
    @RequestWrapper(localName = "copyCustomSubjectArea", targetNamespace = "http://www.birst.com/", className = "com.birst.CopyCustomSubjectArea")
    @ResponseWrapper(localName = "copyCustomSubjectAreaResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CopyCustomSubjectAreaResponse")
    void copyCustomSubjectArea(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "fromSpaceId", targetNamespace = "http://www.birst.com/")
                    String fromSpaceId,
            @WebParam(name = "customSubjectAreaName", targetNamespace = "http://www.birst.com/")
                    String customSubjectAreaName,
            @WebParam(name = "toSpaceId", targetNamespace = "http://www.birst.com/")
                    String toSpaceId);

    /**
     * List all subject areas in a space.  Arguments are the login token and the space id.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/listCustomSubjectAreas")
    @WebResult(name = "listCustomSubjectAreasResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listCustomSubjectAreas", targetNamespace = "http://www.birst.com/", className = "com.birst.ListCustomSubjectAreas")
    @ResponseWrapper(localName = "listCustomSubjectAreasResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListCustomSubjectAreasResponse")
    ArrayOfString listCustomSubjectAreas(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Get a custom subject area.  Arguments are the login token, space id, and subject area name.
     * 
     * @param spaceID
     * @param name
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/getSubjectAreaContent")
    @WebResult(name = "getSubjectAreaContentResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getSubjectAreaContent", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSubjectAreaContent")
    @ResponseWrapper(localName = "getSubjectAreaContentResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSubjectAreaContentResponse")
    String getSubjectAreaContent(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name);

    /**
     * Gets the extended subject area in a space.  Arguments are the login token, space id, and subject area name.
     * 
     * @param spaceID
     * @param name
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/getExtendedSubjectArea")
    @WebResult(name = "getExtendedSubjectAreaResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getExtendedSubjectArea", targetNamespace = "http://www.birst.com/", className = "com.birst.GetExtendedSubjectArea")
    @ResponseWrapper(localName = "getExtendedSubjectAreaResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetExtendedSubjectAreaResponse")
    String getExtendedSubjectArea(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name);

    /**
     * Gets the updated subject area based on the BQL query.  Arguments are the login token, space id, subject area name and BQL query.
     * 
     * @param spaceID
     * @param query
     * @param name
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/getUpdatedSubjectArea")
    @WebResult(name = "getUpdatedSubjectAreaResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getUpdatedSubjectArea", targetNamespace = "http://www.birst.com/", className = "com.birst.GetUpdatedSubjectArea")
    @ResponseWrapper(localName = "getUpdatedSubjectAreaResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetUpdatedSubjectAreaResponse")
    String getUpdatedSubjectArea(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name,
            @WebParam(name = "query", targetNamespace = "http://www.birst.com/")
                    String query);

    /**
     * Creates a custom subject area in a space. Arguments are login token, space id, subject area name, description and permissions
     * 
     * @param spaceID
     * @param name
     * @param description
     * @param groups
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/createSubjectArea")
    @RequestWrapper(localName = "createSubjectArea", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateSubjectArea")
    @ResponseWrapper(localName = "createSubjectAreaResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.CreateSubjectAreaResponse")
    void createSubjectArea(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name,
            @WebParam(name = "description", targetNamespace = "http://www.birst.com/")
                    String description,
            @WebParam(name = "groups", targetNamespace = "http://www.birst.com/")
                    ArrayOfString groups);

    /**
     * Renames the custom subject area in a space. Arguments are login token, space id, custom subject area old name and new name
     * 
     * @param spaceID
     * @param newName
     * @param name
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/renameSubjectArea")
    @RequestWrapper(localName = "renameSubjectArea", targetNamespace = "http://www.birst.com/", className = "com.birst.RenameSubjectArea")
    @ResponseWrapper(localName = "renameSubjectAreaResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RenameSubjectAreaResponse")
    void renameSubjectArea(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name,
            @WebParam(name = "newName", targetNamespace = "http://www.birst.com/")
                    String newName);

    /**
     * Sets the permissions for a subject area in a space. Arguments are login token, space id, subject area name and group names
     * 
     * @param spaceID
     * @param name
     * @param groups
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setSubjectAreaPermissions")
    @RequestWrapper(localName = "setSubjectAreaPermissions", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSubjectAreaPermissions")
    @ResponseWrapper(localName = "setSubjectAreaPermissionsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSubjectAreaPermissionsResponse")
    void setSubjectAreaPermissions(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name,
            @WebParam(name = "groups", targetNamespace = "http://www.birst.com/")
                    ArrayOfString groups);

    /**
     * Gets the permissions for a subject area in a space. Arguments are login token, space id, subject area name
     * 
     * @param spaceID
     * @param name
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/getSubjectAreaPermissions")
    @WebResult(name = "getSubjectAreaPermissionsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getSubjectAreaPermissions", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSubjectAreaPermissions")
    @ResponseWrapper(localName = "getSubjectAreaPermissionsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSubjectAreaPermissionsResponse")
    ArrayOfString getSubjectAreaPermissions(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name);

    /**
     * Sets the description for a subject area in a space. Arguments are login token, space id, subject area name and description
     * 
     * @param spaceID
     * @param name
     * @param description
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setSubjectAreaDescription")
    @RequestWrapper(localName = "setSubjectAreaDescription", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSubjectAreaDescription")
    @ResponseWrapper(localName = "setSubjectAreaDescriptionResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSubjectAreaDescriptionResponse")
    void setSubjectAreaDescription(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name,
            @WebParam(name = "description", targetNamespace = "http://www.birst.com/")
                    String description);

    /**
     * Gets the description for a subject area in a space. Arguments are login token, space id, subject area name
     * 
     * @param spaceID
     * @param name
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/getSubjectAreaDescription")
    @WebResult(name = "getSubjectAreaDescriptionResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getSubjectAreaDescription", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSubjectAreaDescription")
    @ResponseWrapper(localName = "getSubjectAreaDescriptionResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSubjectAreaDescriptionResponse")
    String getSubjectAreaDescription(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name);

    /**
     * Sets the subject area for a space. Arguments are login token, space id, subject area content
     * 
     * @param spaceID
     * @param saContent
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setSubjectArea")
    @RequestWrapper(localName = "setSubjectArea", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSubjectArea")
    @ResponseWrapper(localName = "setSubjectAreaResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSubjectAreaResponse")
    void setSubjectArea(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "saContent", targetNamespace = "http://www.birst.com/")
                    String saContent);

    /**
     * Add Saved Expression to Custom Subject Area. Arguments are login token,expression name, subject area name , location
     * 
     * @param spaceID
     * @param expressionName
     * @param location
     * @param csaName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/addExpressionToSubjectArea")
    @RequestWrapper(localName = "addExpressionToSubjectArea", targetNamespace = "http://www.birst.com/", className = "com.birst.AddExpressionToSubjectArea")
    @ResponseWrapper(localName = "addExpressionToSubjectAreaResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.AddExpressionToSubjectAreaResponse")
    void addExpressionToSubjectArea(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "expressionName", targetNamespace = "http://www.birst.com/")
                    String expressionName,
            @WebParam(name = "csaName", targetNamespace = "http://www.birst.com/")
                    String csaName,
            @WebParam(name = "location", targetNamespace = "http://www.birst.com/")
                    String location);

    /**
     * Remove Saved Expression from Custom Subject Area. Arguments are login token,expression name, subject area name , location
     * 
     * @param spaceID
     * @param expressionName
     * @param location
     * @param csaName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/removeExpressionFromSubjectArea")
    @RequestWrapper(localName = "removeExpressionFromSubjectArea", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveExpressionFromSubjectArea")
    @ResponseWrapper(localName = "removeExpressionFromSubjectAreaResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RemoveExpressionFromSubjectAreaResponse")
    void removeExpressionFromSubjectArea(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "expressionName", targetNamespace = "http://www.birst.com/")
                    String expressionName,
            @WebParam(name = "csaName", targetNamespace = "http://www.birst.com/")
                    String csaName,
            @WebParam(name = "location", targetNamespace = "http://www.birst.com/")
                    String location);

    /**
     * Delete a custom subject area in a space.  Arguments are login token, space id and name of subject area.
     * 
     * @param spaceID
     * @param name
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/deleteSubjectArea")
    @RequestWrapper(localName = "deleteSubjectArea", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteSubjectArea")
    @ResponseWrapper(localName = "deleteSubjectAreaResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteSubjectAreaResponse")
    void deleteSubjectArea(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name);

    /**
     * List all spaces that this user has access to.  Arguments are the login token.
     * 
     * @param token
     * @return
     *     returns com.birst.ArrayOfUserSpace
     */
    @WebMethod(action = "http://www.birst.com/listSpaces")
    @WebResult(name = "listSpacesResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listSpaces", targetNamespace = "http://www.birst.com/", className = "com.birst.ListSpaces")
    @ResponseWrapper(localName = "listSpacesResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListSpacesResponse")
    ArrayOfUserSpace listSpaces(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * List all spaces that are owned by Users in this account.  Arguments are the login token.
     * 
     * @param token
     * @return
     *     returns com.birst.ArrayOfUserSpace
     */
    @WebMethod(action = "http://www.birst.com/listAllSpaces")
    @WebResult(name = "listAllSpacesResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "listAllSpaces", targetNamespace = "http://www.birst.com/", className = "com.birst.ListAllSpaces")
    @ResponseWrapper(localName = "listAllSpacesResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ListAllSpacesResponse")
    ArrayOfUserSpace listAllSpaces(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * Delete the last load data.  Arguments are the login token and the space id.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/deleteLastDataFromSpace")
    @WebResult(name = "deleteLastDataFromSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "deleteLastDataFromSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteLastDataFromSpace")
    @ResponseWrapper(localName = "deleteLastDataFromSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteLastDataFromSpaceResponse")
    String deleteLastDataFromSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Delete all loaded data.  Arguments are the login token and the space id.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/deleteAllDataFromSpace")
    @WebResult(name = "deleteAllDataFromSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "deleteAllDataFromSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteAllDataFromSpace")
    @ResponseWrapper(localName = "deleteAllDataFromSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.DeleteAllDataFromSpaceResponse")
    String deleteAllDataFromSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Runs the scheduled report.  Arguments are the login token, the space id and schedule name.
     * 
     * @param spaceId
     * @param reportScheduleName
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/executeScheduledReport")
    @RequestWrapper(localName = "executeScheduledReport", targetNamespace = "http://www.birst.com/", className = "com.birst.ExecuteScheduledReport")
    @ResponseWrapper(localName = "executeScheduledReportResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ExecuteScheduledReportResponse")
    void executeScheduledReport(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceId", targetNamespace = "http://www.birst.com/")
                    String spaceId,
            @WebParam(name = "reportScheduleName", targetNamespace = "http://www.birst.com/")
                    String reportScheduleName);

    /**
     * Executes a report to be exportedn to PNG.  Arguments are the login token, the space id, the report name, a list of filters and whether to turn off pagination or not.
     * 
     * @param spaceId
     * @param reportPath
     * @param reportFilters
     * @param page
     * @param zoomFactor
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/exportReportToPNG")
    @WebResult(name = "exportReportToPNGResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "exportReportToPNG", targetNamespace = "http://www.birst.com/", className = "com.birst.ExportReportToPNG")
    @ResponseWrapper(localName = "exportReportToPNGResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ExportReportToPNGResponse")
    String exportReportToPNG(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceId", targetNamespace = "http://www.birst.com/")
                    String spaceId,
            @WebParam(name = "reportPath", targetNamespace = "http://www.birst.com/")
                    String reportPath,
            @WebParam(name = "reportFilters", targetNamespace = "http://www.birst.com/")
                    ArrayOfFilter reportFilters,
            @WebParam(name = "zoomFactor", targetNamespace = "http://www.birst.com/")
                    int zoomFactor,
            @WebParam(name = "page", targetNamespace = "http://www.birst.com/")
                    int page);

    /**
     * Executes a report to be exported to PDF.  Arguments are the login token, the space id, the report name, a list of filters and whether to turn off pagination or not.
     * 
     * @param spaceId
     * @param reportPath
     * @param reportFilters
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/exportReportToPDF")
    @WebResult(name = "exportReportToPDFResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "exportReportToPDF", targetNamespace = "http://www.birst.com/", className = "com.birst.ExportReportToPDF")
    @ResponseWrapper(localName = "exportReportToPDFResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ExportReportToPDFResponse")
    String exportReportToPDF(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceId", targetNamespace = "http://www.birst.com/")
                    String spaceId,
            @WebParam(name = "reportPath", targetNamespace = "http://www.birst.com/")
                    String reportPath,
            @WebParam(name = "reportFilters", targetNamespace = "http://www.birst.com/")
                    ArrayOfFilter reportFilters);

    /**
     * Executes a report to be exported to PPT.  Arguments are the login token, the space id, the report name, a list of filters and whether to turn off pagination or not.
     * 
     * @param spaceId
     * @param reportPath
     * @param reportFilters
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/exportReportToPPT")
    @WebResult(name = "exportReportToPPTResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "exportReportToPPT", targetNamespace = "http://www.birst.com/", className = "com.birst.ExportReportToPPT")
    @ResponseWrapper(localName = "exportReportToPPTResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ExportReportToPPTResponse")
    String exportReportToPPT(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceId", targetNamespace = "http://www.birst.com/")
                    String spaceId,
            @WebParam(name = "reportPath", targetNamespace = "http://www.birst.com/")
                    String reportPath,
            @WebParam(name = "reportFilters", targetNamespace = "http://www.birst.com/")
                    ArrayOfFilter reportFilters);

    /**
     * Executes a report to be exported to XLS.  Arguments are the login token, the space id, the report name, a list of filters and whether to turn off pagination or not.
     * 
     * @param spaceId
     * @param reportPath
     * @param reportFilters
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/exportReportToXLS")
    @WebResult(name = "exportReportToXLSResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "exportReportToXLS", targetNamespace = "http://www.birst.com/", className = "com.birst.ExportReportToXLS")
    @ResponseWrapper(localName = "exportReportToXLSResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ExportReportToXLSResponse")
    String exportReportToXLS(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceId", targetNamespace = "http://www.birst.com/")
                    String spaceId,
            @WebParam(name = "reportPath", targetNamespace = "http://www.birst.com/")
                    String reportPath,
            @WebParam(name = "reportFilters", targetNamespace = "http://www.birst.com/")
                    ArrayOfFilter reportFilters);

    /**
     * Executes a report to be exported to CSV.  Arguments are the login token, the space id, the report name, a list of filters and whether to turn off pagination or not.
     * 
     * @param spaceId
     * @param reportPath
     * @param reportFilters
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/exportReportToCSV")
    @WebResult(name = "exportReportToCSVResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "exportReportToCSV", targetNamespace = "http://www.birst.com/", className = "com.birst.ExportReportToCSV")
    @ResponseWrapper(localName = "exportReportToCSVResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ExportReportToCSVResponse")
    String exportReportToCSV(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceId", targetNamespace = "http://www.birst.com/")
                    String spaceId,
            @WebParam(name = "reportPath", targetNamespace = "http://www.birst.com/")
                    String reportPath,
            @WebParam(name = "reportFilters", targetNamespace = "http://www.birst.com/")
                    ArrayOfFilter reportFilters);

    /**
     * Executes a report to be exported to RTF.  Arguments are the login token, the space id, the report name, a list of filters and whether to turn off pagination or not.
     * 
     * @param spaceId
     * @param reportPath
     * @param reportFilters
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/exportReportToRTF")
    @WebResult(name = "exportReportToRTFResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "exportReportToRTF", targetNamespace = "http://www.birst.com/", className = "com.birst.ExportReportToRTF")
    @ResponseWrapper(localName = "exportReportToRTFResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ExportReportToRTFResponse")
    String exportReportToRTF(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceId", targetNamespace = "http://www.birst.com/")
                    String spaceId,
            @WebParam(name = "reportPath", targetNamespace = "http://www.birst.com/")
                    String reportPath,
            @WebParam(name = "reportFilters", targetNamespace = "http://www.birst.com/")
                    ArrayOfFilter reportFilters);

    /**
     * Gets the result of a report export call (exportReportToPNG...)
     * 
     * @param exportToken
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/getExportData")
    @WebResult(name = "getExportDataResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getExportData", targetNamespace = "http://www.birst.com/", className = "com.birst.GetExportData")
    @ResponseWrapper(localName = "getExportDataResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetExportDataResponse")
    String getExportData(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "exportToken", targetNamespace = "http://www.birst.com/")
                    String exportToken);

    /**
     * Sets the SSO Password for a space.  Argments are the Login token, the space Id, and the password. The password must be atleast 8 characters.
     * 
     * @param spaceID
     * @param password
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/setSpaceSSOPassword")
    @RequestWrapper(localName = "setSpaceSSOPassword", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSpaceSSOPassword")
    @ResponseWrapper(localName = "setSpaceSSOPasswordResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetSpaceSSOPasswordResponse")
    void setSpaceSSOPassword(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "password", targetNamespace = "http://www.birst.com/")
                    String password);

    /**
     * The extractSalesforceData web service was deprecated in 5.23 and is now removed. Use extractCloudConnectorData instead.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/extractSalesforceData")
    @WebResult(name = "extractSalesforceDataResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "extractSalesforceData", targetNamespace = "http://www.birst.com/", className = "com.birst.ExtractSalesforceData")
    @ResponseWrapper(localName = "extractSalesforceDataResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ExtractSalesforceDataResponse")
    String extractSalesforceData(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Deprecated, replaced with extractCloudConnectorData. Gets Birst to extract the data sources from any available Connector.  Arguments are Login token, space id, Connector Name, Extract Group list and returns an extraction token. Use getJobStatus and isJobComplete to check the status.
     * 
     * @param spaceID
     * @param extractGroups
     * @param connectorName
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/extractConnectorData")
    @WebResult(name = "extractConnectorDataResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "extractConnectorData", targetNamespace = "http://www.birst.com/", className = "com.birst.ExtractConnectorData")
    @ResponseWrapper(localName = "extractConnectorDataResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ExtractConnectorDataResponse")
    String extractConnectorData(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "connectorName", targetNamespace = "http://www.birst.com/")
                    String connectorName,
            @WebParam(name = "extractGroups", targetNamespace = "http://www.birst.com/")
                    ArrayOfString extractGroups);

    /**
     * Gets Birst to extract the data sources from any available Connection.  Arguments are Login token, space id, Connector Name, Connection Name, Extract Group list and returns an extraction token. Use getJobStatus and isJobComplete to check the status.
     * 
     * @param spaceID
     * @param token
     * @param cloudConnections
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/extractCloudConnectorData")
    @WebResult(name = "extractCloudConnectorDataResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "extractCloudConnectorData", targetNamespace = "http://www.birst.com/", className = "com.birst.ExtractCloudConnectorData")
    @ResponseWrapper(localName = "extractCloudConnectorDataResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ExtractCloudConnectorDataResponse")
    String extractCloudConnectorData(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "cloudConnections", targetNamespace = "http://www.birst.com/")
                    ArrayOfCloudConnection cloudConnections);

    /**
     * Generate access token for Birst Connect 2.0.  Arguments are Login token and returns an json string with username and access_token.
     * 
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/generateBirstConnectToken")
    @WebResult(name = "generateBirstConnectTokenResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "generateBirstConnectToken", targetNamespace = "http://www.birst.com/", className = "com.birst.GenerateBirstConnectToken")
    @ResponseWrapper(localName = "generateBirstConnectTokenResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GenerateBirstConnectTokenResponse")
    String generateBirstConnectToken(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token);

    /**
     * Registers a new birst connect agent. Arguments are Login token, agent name and agent description and returns the unique id of the registered agent.
     * 
     * @param name
     * @param description
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/registerBirstConnectAgent")
    @WebResult(name = "registerBirstConnectAgentResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "registerBirstConnectAgent", targetNamespace = "http://www.birst.com/", className = "com.birst.RegisterBirstConnectAgent")
    @ResponseWrapper(localName = "registerBirstConnectAgentResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.RegisterBirstConnectAgentResponse")
    String registerBirstConnectAgent(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "name", targetNamespace = "http://www.birst.com/")
                    String name,
            @WebParam(name = "description", targetNamespace = "http://www.birst.com/")
                    String description);

    /**
     * Gets a JNLP file for a space.  Argments are the Login token, the space Id, and the name of the configuration file (normally <configurationName>_dconfig.xml, defaults to dcconfig.xml).
     * 
     * @param spaceID
     * @param configfile
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://www.birst.com/getSpaceJNLPFile")
    @WebResult(name = "getSpaceJNLPFileResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getSpaceJNLPFile", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSpaceJNLPFile")
    @ResponseWrapper(localName = "getSpaceJNLPFileResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSpaceJNLPFileResponse")
    String getSpaceJNLPFile(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "configfile", targetNamespace = "http://www.birst.com/")
                    String configfile);

    /**
     * Gets space detail information. Arguments are login token and space id.
     * 
     * @param spaceID
     * @param token
     * @return
     *     returns com.birst.SpaceStatistics
     */
    @WebMethod(action = "http://www.birst.com/getSpaceStatistics")
    @WebResult(name = "getSpaceStatisticsResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "getSpaceStatistics", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSpaceStatistics")
    @ResponseWrapper(localName = "getSpaceStatisticsResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.GetSpaceStatisticsResponse")
    SpaceStatistics getSpaceStatistics(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID);

    /**
     * Add generic JDBC database type real time connection information. Arguments are the Login token, the space Id, configFileName, connectionName, useDirectConnection, sqlType, driverName, connectionString, filter, userName, password and timeout.
     * 
     * @param connectionString
     * @param filter
     * @param spaceID
     * @param sqlType
     * @param password
     * @param useDirectConnection
     * @param configFileName
     * @param driverName
     * @param connectionName
     * @param userName
     * @param timeout
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://www.birst.com/setUpGenericJDBCRealTimeConnectionForSpace")
    @WebResult(name = "setUpGenericJDBCRealTimeConnectionForSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "setUpGenericJDBCRealTimeConnectionForSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.SetUpGenericJDBCRealTimeConnectionForSpace")
    @ResponseWrapper(localName = "setUpGenericJDBCRealTimeConnectionForSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetUpGenericJDBCRealTimeConnectionForSpaceResponse")
    boolean setUpGenericJDBCRealTimeConnectionForSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "configFileName", targetNamespace = "http://www.birst.com/")
                    String configFileName,
            @WebParam(name = "connectionName", targetNamespace = "http://www.birst.com/")
                    String connectionName,
            @WebParam(name = "useDirectConnection", targetNamespace = "http://www.birst.com/")
                    boolean useDirectConnection,
            @WebParam(name = "sqlType", targetNamespace = "http://www.birst.com/")
                    String sqlType,
            @WebParam(name = "driverName", targetNamespace = "http://www.birst.com/")
                    String driverName,
            @WebParam(name = "connectionString", targetNamespace = "http://www.birst.com/")
                    String connectionString,
            @WebParam(name = "filter", targetNamespace = "http://www.birst.com/")
                    String filter,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "password", targetNamespace = "http://www.birst.com/")
                    String password,
            @WebParam(name = "timeout", targetNamespace = "http://www.birst.com/")
                    int timeout);

    /**
     * Add real time connection information. Arguments are the Login token, the space Id, configFileName, connectionName, databaseType, useDirectConnection, host, port, databaseName, userName, password and timeout.
     * 
     * @param databaseType
     * @param spaceID
     * @param password
     * @param databaseName
     * @param port
     * @param useDirectConnection
     * @param configFileName
     * @param host
     * @param connectionName
     * @param userName
     * @param timeout
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://www.birst.com/setUpRealTimeConnectionForSpace")
    @WebResult(name = "setUpRealTimeConnectionForSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "setUpRealTimeConnectionForSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.SetUpRealTimeConnectionForSpace")
    @ResponseWrapper(localName = "setUpRealTimeConnectionForSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.SetUpRealTimeConnectionForSpaceResponse")
    boolean setUpRealTimeConnectionForSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "configFileName", targetNamespace = "http://www.birst.com/")
                    String configFileName,
            @WebParam(name = "connectionName", targetNamespace = "http://www.birst.com/")
                    String connectionName,
            @WebParam(name = "databaseType", targetNamespace = "http://www.birst.com/")
                    String databaseType,
            @WebParam(name = "useDirectConnection", targetNamespace = "http://www.birst.com/")
                    boolean useDirectConnection,
            @WebParam(name = "host", targetNamespace = "http://www.birst.com/")
                    String host,
            @WebParam(name = "port", targetNamespace = "http://www.birst.com/")
                    int port,
            @WebParam(name = "databaseName", targetNamespace = "http://www.birst.com/")
                    String databaseName,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "password", targetNamespace = "http://www.birst.com/")
                    String password,
            @WebParam(name = "timeout", targetNamespace = "http://www.birst.com/")
                    int timeout);

    /**
     * Modify real time connection information.  Arguments are the Login token, the space id, the name of the connection, the host, the port, the name of the database, the user name, the password and the timeout.
     * 
     * @param spaceID
     * @param password
     * @param databaseName
     * @param port
     * @param configFileName
     * @param host
     * @param connectionName
     * @param userName
     * @param timeout
     * @param token
     */
    @WebMethod(action = "http://www.birst.com/modifyRealTimeConnectionInformation")
    @RequestWrapper(localName = "modifyRealTimeConnectionInformation", targetNamespace = "http://www.birst.com/", className = "com.birst.ModifyRealTimeConnectionInformation")
    @ResponseWrapper(localName = "modifyRealTimeConnectionInformationResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ModifyRealTimeConnectionInformationResponse")
    void modifyRealTimeConnectionInformation(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "configFileName", targetNamespace = "http://www.birst.com/")
                    String configFileName,
            @WebParam(name = "connectionName", targetNamespace = "http://www.birst.com/")
                    String connectionName,
            @WebParam(name = "host", targetNamespace = "http://www.birst.com/")
                    String host,
            @WebParam(name = "port", targetNamespace = "http://www.birst.com/")
                    int port,
            @WebParam(name = "databaseName", targetNamespace = "http://www.birst.com/")
                    String databaseName,
            @WebParam(name = "userName", targetNamespace = "http://www.birst.com/")
                    String userName,
            @WebParam(name = "password", targetNamespace = "http://www.birst.com/")
                    String password,
            @WebParam(name = "timeout", targetNamespace = "http://www.birst.com/")
                    int timeout);

    /**
     * Import/Reimport cube using realtime connection connection. Arguments are the Login token, the space Id, connectionName, databaseType, cubeName, importType and cacheable.
     * 
     * @param databaseType
     * @param spaceID
     * @param importType
     * @param cacheable
     * @param connectionName
     * @param cubeName
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://www.birst.com/importCubeMetaDataIntoSpace")
    @WebResult(name = "importCubeMetaDataIntoSpaceResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "importCubeMetaDataIntoSpace", targetNamespace = "http://www.birst.com/", className = "com.birst.ImportCubeMetaDataIntoSpace")
    @ResponseWrapper(localName = "importCubeMetaDataIntoSpaceResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ImportCubeMetaDataIntoSpaceResponse")
    boolean importCubeMetaDataIntoSpace(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceID", targetNamespace = "http://www.birst.com/")
                    String spaceID,
            @WebParam(name = "connectionName", targetNamespace = "http://www.birst.com/")
                    String connectionName,
            @WebParam(name = "databaseType", targetNamespace = "http://www.birst.com/")
                    String databaseType,
            @WebParam(name = "cubeName", targetNamespace = "http://www.birst.com/")
                    String cubeName,
            @WebParam(name = "importType", targetNamespace = "http://www.birst.com/")
                    int importType,
            @WebParam(name = "cacheable", targetNamespace = "http://www.birst.com/")
                    boolean cacheable);

    /**
     * Import a package into the space. Arguments are the Login token, spaceFrom Id, package Id, spaceTo Id.
     * 
     * @param spaceFromID
     * @param packageID
     * @param spaceToID
     * @param token
     * @return
     *     returns com.birst.ArrayOfString
     */
    @WebMethod(action = "http://www.birst.com/importPackage")
    @WebResult(name = "importPackageResult", targetNamespace = "http://www.birst.com/")
    @RequestWrapper(localName = "importPackage", targetNamespace = "http://www.birst.com/", className = "com.birst.ImportPackage")
    @ResponseWrapper(localName = "importPackageResponse", targetNamespace = "http://www.birst.com/", className = "com.birst.ImportPackageResponse")
    ArrayOfString importPackage(
            @WebParam(name = "token", targetNamespace = "http://www.birst.com/")
                    String token,
            @WebParam(name = "spaceFromID", targetNamespace = "http://www.birst.com/")
                    String spaceFromID,
            @WebParam(name = "packageID", targetNamespace = "http://www.birst.com/")
                    String packageID,
            @WebParam(name = "spaceToID", targetNamespace = "http://www.birst.com/")
                    String spaceToID);

}
